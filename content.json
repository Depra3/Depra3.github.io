{"posts":[{"title":"JAVA Spring Boot(STS - Spring Tools 4) 설치","text":"JAVA Spring Boot를 사용하기 위한 준비 Eclipse EE version은 2022-09(4.25.0) 설치 방법 링크 JAVA EE &amp; Apche Tomcat 설치 Help → Eclipse Marketplace… 클릭 (잠시 동안 로딩이 있을 수 있습니다.) sts 검색 → 최신 버전(현재는 Spring Tools 4가 최신) 찾기 → Install 클릭 Confirm 클릭 약 2~3분 정도 소요됩니다. ① 동그라미 체크 → ② Finish 클릭 붉은 박스 클릭하면 현재 진행도가 상세하게 나옵니다. 설치에 시간이 걸리니 커피 한 잔을 타고 와서 지켜봅시다.(약 4분 정도 소요됨) 설치 중간에 갑자기 Trust 창이 뜹니다. ① Select All 클릭 → ② Trust Selected 클릭 Restart Now 클릭 Eclipse가 다시 시작되니 한 잔 타 온 커피를 마시면서 기다려봅시다. ☆ TEST ☆ File 클릭 → New에 마우스 커서 놓기 → Other.. 클릭 ① spring 입력 (자동 검색) → ② Spring Starter Project 클릭 → ③ Next 클릭 ① Project 이름 / ② Gradle - Groovy로 설정 / ③ 클릭하여 8로 설정 / ④ 클릭하여 War로 설정 (글쓴이가 배운 설정입니다.) 설정 후 확인 ① spring web 입력 → ② 네모박스 체크 → ③ 선택되었는지 확인 → ④ Finish 클릭 그림과 같은 구조로 생성되는 것을 확인할 수 있습니다. 간혹 유효성 관련한 창이 뜨기도 하는데 검색해보니 검색을 잘 못하는 건지 찾기가 힘듭니다. 아무거나 클릭해도 무방할 듯 싶습니다.","link":"/2023/01/07/2023/01/JAVA_Spring_Boot_(STS-Spring_Tools_4)_Install/"},{"title":"JAVA EE &amp; Apche Tomcat 설치","text":"JAVA EE를 사용하기 위한 Eclipse 다운로드★ 다운로드 링크 ★Eclipse Packages | The Eclipse Foundation - home to a global community, the Eclipse IDE, Jakarta EE and over 350 open source projects… 아래의 그림에서 이용자의 운영체제에 맞게 선택하여 다운로드 어느 것을 선택하든 같은 것을 다운 받기 때문에 신경 쓰지 않고 다운로드 JDK 설치★ JDK 설치 및 환경 변수 설정 링크 ★Apache Tomct 다운로드★ 다운로드 링크 ★Apache Tomcat® 원하는 버전 선택 ( 글쓴이는 배운 환경과 같은 Tomcat 9를 이용 ) zip 클릭해서 다운로드 다운로드 한 폴더에 그대로 압축 풀기 eclipse 실행 원하는 경로로 설정하고 싶으면 ① Browse 클릭 기본 경로로 만들어서 사용한다면 그대로 ② Launch 클릭 ※ ① Browse 클릭했을 경우 원하는 경로 선택 후 폴더 선택 클릭 경로가 바뀐 것을 볼 수 있다. Launch 클릭하여 Eclipse 실행 아래 그림과 같이 나왔다가 실행이 된다. 작업하기 위한 기본 설정요약 Web &gt; CSS Files &gt; Encoding : ISO 10646/Unicode(UTF-8) 선택 Web &gt; HTML Files &gt; Encoding : ISO 10646/Unicode(UTF-8) 선택 Web &gt; JSP Files &gt; Encoding : ISO 10646/Unicode(UTF-8) 선택 Server &gt; Runtime Environments &gt; Add &gt; Apache &gt; Apache 버전 선택 &gt; Next &gt; Browse &gt; 압축 해제한 Apache Tomcat 폴더 클릭 &gt; 폴더 선택 클릭 &gt; Finish 클릭 &gt; 추가되었는지 확인 &gt; Apply and Close 클릭 상세 상단의 Window - Preferences 클릭 ① Web 좌측의 ‘**&gt;’** 클릭 → ② CSS Files 좌측의 ‘**&gt;**’ 클릭 → ③ Korean, EUC-KR 클릭 → ④ **ISO 10646/Unicode(UTF-8)**을 찾아 클릭 ( 스크롤을 맨 위에 올리면 있음 ) ① Apply 클릭하여 적용 → ② HTML Files 클릭 ① Korean, EUC-KR 클릭 → ② **ISO 10646/Unicode(UTF-8)**을 찾아 클릭 ( 위와 위치 동일함 ) → ③ Apply 클릭하여 적용 → ④ JSP Files 클릭 ① Korean, EUC-KR 클릭 → ② **ISO 10646/Unicode(UTF-8)**을 찾아 클릭 ( 위와 위치 동일함 ) → ③ Apply 클릭 ① Server 좌측의 ‘**&gt;**’ 클릭 → ② Runtime Environments 클릭 → ③ Add.. 클릭 ① Apache 좌측의 ‘**&gt;**’ 클릭 → ② 자신이 받은 Apache Tomcat 버전에 맞게 클릭 → ③ ‘②’를 진행하면 비활성화 되어 있는 Next 버튼이 활성화 되니 Next 클릭 글쓴이는 Apache Tomcat 9를 다운 받음 ① Browse.. 클릭 → 폴더 선택 창이 나옴 → ② 압축 해제한 Apache Tomcat 폴더 클릭 → ③ 폴더 선택 클릭 → ④ 활성화 된 Finish 클릭 추가 되었는지 확인 후 ① Apply and Close 클릭 Test ① Create a Dynamic Web project 클릭 → ② Project name에 원하는 이름 쓰기 → ③ Finish 클릭 ① webapp에서 마우스 오른쪽 클릭 → ② New에 마우스 커서를 놓기 → HTML File이 있다면 클릭 / 없다면 Other.. 클릭 ※ Other.. 클릭 후 ① html 입력하면 ② HTML File 이 자동으로 나옴 → ③ Next 클릭 ① Test.html 입력 → ② Next 클릭 Finish 클릭 예시로 “연동 확인 !!” 입력 ① Test.html 마우스 오른쪽 클릭 → ② Run As에 마우스 커서 놓기 → ③ Run on Server 클릭 ① 자신이 설치한 Tomcat 버전 클릭 (글쓴이는 Tomcat 9 설치) → ② Next 클릭 Project Name인 Test있는지 확인 → Finish 클릭 연동 성공!","link":"/2022/12/27/2022/12/20/JAVA_EE_&_Apche_Tomcat_Install/"},{"title":"JAVA SE 설치","text":"Java SE 를 사용하기 위한 Eclipse 다운로드★ 다운로드 링크 ★The Community for Open Innovation and Collaboration | The Eclipse Foundation Download 클릭 Download Packages 클릭 사용자 컴퓨터에 따른 버전 링크 클릭 붉은 박스 클릭해서 다운로드 시작 다운로드 확인 ★ JDK 설치 및 환경 변수 설정 링크 ★","link":"/2022/12/19/2022/12/20/JAVA_SE_Install/"},{"title":"JDK 설치 및 환경 변수 설정","text":"JDK 설치★ 다운로드 링크 ★Download the Latest Java LTS Free Java 17 - Windows - 원하는 설치 방식으로 다운로드(zip이 편한 것 같아서 zip을 선택했습니다.) 이와 같이 원하는 폴더 안에 압축해제 환경 변수 설정 내 PC에서 마우스 오른쪽 클릭 후 속성 클릭 고급 시스템 설정 클릭 환경 변수(N)… 클릭 사용자 변수가 아닌 시스템 변수에서 새로 만들기 클릭 변수 이름(N)은 JAVA_HOME 변수 값(V)은 JDK파일을 압축 풀기하고 연 폴더 경로 (글쓴이는 D:\\AI_Class\\tools\\jdk-17.0.4.1의 위치에 있음) 모두 입력 후 확인 JAVA_HOME있는지 확인 Path 클릭 후 편집 클릭 새로 만들기 클릭 후 D:\\AI_Class\\tools\\jdk-17.0.4.1\\bin 나 %JAVA_HOME%\\bin 중 “하나” 쓰시면 됩니다. 이후 확인 누르며 빠져나오기 전부 확인을 눌러 설정 완료 참고 (CLASS PATH) Class Path는 Java Application이 사용하고 있는 Class가 여러 경로로 분산 되어 있을 때 하나로 모으기 위해 사용하는 방법 새로 만들기 클릭 CLASSPATH와 %JAVA_HOME%\\lib 입력 후 확인 설치 확인 시작메뉴 옆에서 cmd 입력 후 명령 프롬프트 실행 java -version 과 javac -version으로 확인 다음과 같이 나오면 설치 완료 java -version에서 오류가 나올 시에는 Eclipse가 제대로 설치가 되어있는지 확인 javac -version에서 오류가 나올 시에는 환경 변수 설정이 잘못되어 있을 가능 성이 높아 환경 변수 설정 확인","link":"/2022/12/19/2022/12/20/JDK_Install/"},{"title":"Visual Studio Code 설치 및 환경 설정","text":"코딩 작업 편의를 위한 VS Code 다운로드https://code.visualstudio.com/download 다양한 운영체제에서도 사용 가능 글쓴이는 Window 64bit를 사용하고 있어 x64중 System Installer를 다운 받음 동의 체크 후 다음 원하는 설치 경로 설정 후 다음 클릭(원하는 곳 없으면 그대로 설치해도 무방함) 시작 메뉴 관련 설정 후 다음 클릭 PATH에 추가 : 편의를 위해 체크하는 것을 추천 원하는 것 체크 후 다음 클릭 설치 클릭 설치 완료가 되었으니 Visual Studio Code가 잘 되는 지 실행 Visual Studio Code 실행 체크 후 종료 클릭 실행 화면 플러그 인한국어 설정 사용 시에 영어가 불편하다면 한국어로 설정 가능하다. korean만 입력했을 시 안나올 수도 있기 때문에 language까지 입력 우측 하단에 나오는 창에서 Change Language and Restart 클릭 한국어로 바뀐 것을 볼 수 있다. Live Server 현재 작성한 코드를 실시간으로 로컬 서버로 보여주는 기능. 저장(Ctrl + S)을 하면 실시간으로 웹브라우저에 반영이 된다. 단축키로는 Alt + L 을 입력하고 그 다음에 Alt + O 를 입력해야한다.","link":"/2023/06/18/2023/06/Visual_Studio_Code_Install/"},{"title":"Git &amp; Github 연결 설정","text":"☆ 다운로드 링크 ☆Git Downloads 사용자가 사용하는 OS(운영체제) 선택하여 다운로드 합니다. ( 글쓴이는 Windows 10이므로 Windows 선택 ) 사용자가 사용하는 OS bit를 선택하여 다운로드 합니다. ( 글쓴이는 64bit이므로 64bit 선택 ) 설치 후 실행. (Default) 바탕화면에서 마우스 오른쪽 클릭 후 Git Bash here 클릭 git —version입력하여 설치 확인 ① code 클릭 → ② 클릭 git clone “링크” 바탕화면에 생긴 파일 위에 오른쪽 클릭 Visual Studio Code 로 실행(단, 환경변수가 설정되어야함) 참고 : Visual Studio Code 설치 및 환경 설정 해당 사이트(https://www.toptal.com/developers/gitignore)에서 사용하는 언어 입력] ex) Python, R 나온 텍스트 내용을 복사 VS Code에서 .gitignore에 붙여넣기(맨 아랫줄에 붙여넣기) 터미널 생성 후 powershell이 아닌 git bash로 체크 후 git add .gitignore 입력 나오는 오류는 로그인이 되지 않아서 발생함. 따라서 로그인해야함. 첫 줄은 로그인 ID, 두번째 줄은 닉네임으로 연결 git config —global user.email “연결할 해당 github 가입 Email” git config —global user.name “연결할 해당 github 닉네임” 마지막으로 git push ( 로컬(local branch)에서 원격 저장소(remot repository)로 보낼 때 사용하는 명령어) 로 마무리 나오는 사이트에서 Authorize 클릭 연결 완료 된 것 확인 아래 코드를 입력하여 업로드 git add . git commit -m “updated” ※ update부분은 git commit message의 내용 git push 변경이 되었는지 확인 File과 Repository를 같은 이름으로 하는 연결 방법 File명과 Repository를 같은 이름으로 한 후 File을 우클릭하여 Git Bash Here 실행 후 아래 부분의 코드를 한 줄 씩 입력","link":"/2023/06/21/2023/06/Git&Github/"},{"title":"Node.js - Github Blog","text":"★ 다운로드 링크 ★ Nodejs.org에서 설치 /Images/2023/06/Node.js-Github_Blog Add to PATH가 있는 지 확인 빨간 박스 체크 흐름대로 가면 아래와 같이 설치 완료 바탕 화면 - Git Bash Here 아래와 같이 순서대로 진행 - 이후 localhost:4000이 되는지 확인 npm install -g hexo-cli hexo init myblog(파일명) cd myblog/ hexo server 편의를 위해 VS Code이용하기 위해 아래와 같이 진행 Git Bash 창에서 code .입력 _config.yml 파일에서 사용할 url 입력 Github에서 Repository 생성 _config.yml 파일에서 deploy 내용 입력 터미널 열기 Git Bash로 접속 아래의 내용 순서대로 입력 npm install npm install hexo-server —save npm install hexo-deployer-git —save hexo generate hexo deploy 백업 폴더명과 Repository name과 항상 같아야함 / 배포 X 백업 O 차례대로 입력하거나 한번에 입력하여 연동 파일 백업 화면 관리 - https://hexo.io/ko/docs/front-matter 블로그 게시글 올리기 편하게 Notion을 이용해 올리는 방법 다운 받은 파일 압축 풀기 VS Code에서 이미지 경로 입력 Github에 올리기 git add . git commit -m “updated” git push Github 블로그에 배포하기 hexo generate hexo deploy (배포) hexo server (배포 전 확인용)","link":"/2023/06/22/2023/06/Node.js-Github_Blog/"},{"title":"1과목-1장-①","text":"정보 시스템 기반 기술1장 응용 SW 기초 기술 활용 Key Words 운영체제, UNIX, 커널, 쉘, IP6, OSI 참조 모델, 라우터, 프로토콜, TCP, UDP 운영체제 운영체제의 목적 ( OS : Operating System) 처리 능력 (Throughtput) 반환 시간 (Turn Around Time) 사용 가능도 (Availability) 신뢰도 (Reliability) 운영체제의 기능 (os) 프로세서, 기억 장치, 입출력 장치, 파일 및 정보 관리 스케줄링, 인터페이스, 공유 기능, 자원 보호 기능, 입출력 장치 보조 기능, 가상 계산기 기능 제공 시스템 오류 검사, 복구 하드웨어와 네트워크 관리 및 제어 커널의 기능 : 운영체제 주요 자원 관리 [ 프기주파 ] 프로세스 관리 기억 장치 관리 주변 장치 관리 파일 관리 쉘의 기능 : 사용자 인터페이스, 명령어 해석 운영체제 종류 Windows, MacOS, UNIX, LINUX (다중 작업 처리) MS-DOS (단일 작업 처리) Windows windows는 1990년대 마이크로소프트 사가 개발한 운영체제이다. 특징 그래픽 사용자 인터페이스 (GUI) 키보드 명령어를 직접 입력하지 않고 마우스로 아이콘이나 메뉴를 선택하여 모든 작업을 수행하는 방식 선점형 멀티태스킹 동시에 여러 개의 프로그램을 실행하는 멀티태스킹을 하면서 운영체제가 각 작업의 CPU이용 시간을 제어하여 응용 프로그램 실행 중 문제가 발생하면 해당 프로그램을 강제 종료 시키고 모든 시스템 자원을 반환하는 방식 PnP(자동 감지 기능) ( Plug and Play ) 컴퓨터 시스템에 프린터나 사운드 카드 등의 하드웨어를 설치했을 때 해당 하드웨어를 사용하는 데 필요한 환경을 운영체제가 자동으로 구성해 주는 기능 OLE (Object Linking and Embedding) 다른 여러 응용 프로그램에서 작성된 문자나 그림 등의 개체를 현재 작성 중인 문서에 자유롭게 연결하거나 삽입하여 편집할 수 있게 하는 기능 255자의 긴 파일 명 Windows에서는 파일 이름을 지정할 때 VFAT를 이용하여 최대 255자까지 지정할 수 있다.파일 이름으로는 / / : * ? &lt; &gt; | 를 제외한 모든 문자 및 공백을 사용할 수 있으며 한글의 경우 127자까지 지정할 수 있다. Single-User 시스템컴퓨터 한 대를 한 사람만이 독점해서 사용한다. Windows 기본 명령어 UNIX 개요 및 특징 [ 대다이계통 ] 1960년대 AT&amp;T 벨(Bell) 연구소, MIT, General Electric이 공동 개발한 운영체제 대화식 운영체제 ( 시분할 시스템을 위함 - 개방형 시스템 ) 다중 작업, 다중 사용자 이식성 ( C언어로 작성 ) 계층적 트리 구조 파일 많은 네트워킹 기능으로 통신망 관리용 운영체제로 적합 UNIX 시스템 구성 커널 (Kernel) UNIX의 핵심적인 부분 부팅시 주기억장치에 적재된 후 상주하면서 실행 하드웨어를 보호하고 프로그램과 하드웨어 간의 인터페이스 역할 담당 프로세스(CPU 스케줄링) 관리, 기억 장치 관리, 파일 관리, 입 출력 관리, 프로세스간 통신, 데이터 전송 및 변환 등 여러가지 기능을 수행 쉘 (Shell) 명령어 해석기 시스템과 사용자간의 인터페이스 담당 DOS의 COMMAND와 같은 기능 수행 주기억장치에 상주하지 않고 명령어가 포함된 파일 형태로 존재, 보조 기억 장치에서 교체 처리 가능 파이프라인 기능을 지원하고 입 출력 재지정을 통해 출력과 입력의 방향을 변경할 수 있다. 공용 Shell이나 사용자 자신이 만든 Shell을 사용할 수 있다. Utility Program 일반 사용자가 작성한 응용 프로그램을 처리하는데 사용한다. DOS에서의 외부 명령어에 해당한다. 유틸리티 프로그램에는 에디터, 컴파일러, 인터프리터, 디버거 등이 있다. UNIX &amp; LINUX 기본 명령어 인터넷 인터넷 IP주소 (Internet Protocol Address) 인터넷에 연결된 모든 컴퓨터 자원을 구분하기 위한 고유한 주소 숫자로 8비트씩 4부분, 총 32비트 표현 A클래스에서 E클래스까지 총 5단계로 구성 A Class: 국가나 대형 통신망에 사용(0~127로 시작) B Class: 중대형 통신망에 사용(128~191로 시작) C Class: 소규모 통신망에 사용(192~223으로 시작) D Class: 멀티캐스트용으로 사용(224~239으로 시작) E Class: 실험적 주소이며 공용되지 않음 서브네팅 (Subnetting) 할당된 네트워크 주소를 다시 여러 개의 작은 네트워크로 나누어 사용 4byte의 IP주소 중 네트워크 주소와 호스트 주소를 구분하기 위한 비트를 서브넷 마스크(Subnet Mask)라고 하며 이를 변경하여 네트워크 주소를 여러 개로 분할하여 사용한다. 서브넷 마스크는 각 클래스마다 다르게 사용된다. IPv6 (Internet Protocol Version 6) 현재 사용하고 있는 IP주소 체계인 IPv4의 주소 부족 문제를 해결하기 위해 개발 128bit의 긴 주소를 사용하여 주소 부족 문제를 해결, IPv4에 비해 자료 전송 속도가 빠름 인증성, 기밀성, 무결성의 지원으로 보안 문제를 해결 IPv4와 호환성이 뛰어남 주소의 확장성, 융통성, 연동성이 뛰어나며 실시간 흐름 제어로 향상된 멀티미디어 기능을 지원 패킷 크기를 확장할 수 있으므로 패킷 크기에 제한이 없다. IPv6의 구성 [ 유멀애 ] 16bit씩 8부분, 총 128bit로 구성 각 부분을 16진수로 표현, 콜론(:)으로 구분 3가지 주소 체계 유니캐스트(1:1), 멀티캐스트(1:N), 애니캐스트(가까이 있는 1:1) 도메인 네임 도메인 네임은 숫자로 된 IP 주소를 사람이 이해하기 쉬운 문자 형태로 표현 호스트 컴퓨터 이름, 소속 기관 이름, 기관의 종류, 소속 국가명 순으로 구성되며, 왼쪽에서 오른쪽으로 갈수록 상위 도메인을 의미한다.","link":"/2023/06/23/2023/06/1%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A0/"},{"title":"1과목-1장-②","text":"OSI 참조 모델 다른 시스템 간의 원활한 통신을 위해 ISO(국제표준화기구)에서 제안한 통신 규약(Protocol) OSI 7계층은 1~3계층을 하위 계층, 4~7계층을 상위 계층으로 구분 하위 : 물리 → 데이터 링크 → 네트워크 상위 : 전송 → 세션 → 표현 → 응용 OSI참조모델 데이터 단위 물리 : 비트 데이터 : 프레임 네트워크 : 패킷 전송 : 세그먼트 세션, 표현, 응용 : 메세지 OSI 참조 모델 계층 물리 계층 전송에 필요한 두 장치 간의 기계적, 전기적, 기능적, 절차적 특정에 대한 규칙 정의 데이터 링크 계층 두 개의 인접한 개방 시스템들 간의 신뢰성 있고 효율적인 정보 전송을 할 수 있도록 “시스템 간” 연결 설정과 유지 및 종료 담당, 흐름 제어, 프레임 동기화, 오류 제어, 순서 제어 네트워크 계층 데이터의 교환 및 중계, “네트워크” 연결 설정 / 유지 / 해제 기능, 경로 설정(Routing) 데이터 교환 및 중계, 트래픽 제어, 패킷 정보 전송 수행 전송(Transport) 계층 논리적 안정과 균일한 데이터 전송 서비스를 제공함으로써 종단 시스템(end-to-end)간의 투명한 데이터 전송 가능 E-T-E간의 전송 연결 설정, 데이터 전송, 연결 해제 기능 세션 계층 송수신 측간의 관련성 유지 대화 구성 및 동기 제어, 데이터 교환 관리, 동기점 표현(presentation) 계층 응용 계층으로부터 받은 데이터를 세션 계층에 보내기 전에 통신을 적당한 형태로 변환, 세션 계층에서 받은 데이터는 응용 계층에 맞게 변환 서로 다른 데이터 표현 형태를 갖는 시스템 간의 상호 접속을 위해 필요한 계층 코드 변환, 데이터 암호화, 데이터 압축, 구문 검색, 정보 형식 변환, 문맥 관리 응용 계층 사용자(응용 프로그램)가 OSI 환경에 접근할 수 있도록 서비스 제공 정보 교환, 전자 사서함, 파일 전송, 가상 터미널 서비스 네트워크 관련 장비 네트워크 인터페이스 카드 (NIC) 컴퓨터와 컴퓨터 또는 컴퓨터와 네트워크를 연결하는 장치로 정보 전송 시 정보가 케이블을 통해 전송될 수 있도록 정보 형태를 변경 물리 허브 (Hub) 한 사무실이나 가까운 거리의 컴퓨터들을 연결하는 장치로, 각 회선을 통합적으로 관리하며 신호 증폭 기능을 하는 리피터의 역할도 포함 더미 허브, 스위칭 허브 리피터 (Repeater) 전송되는 신호가 전송 선로의 특성 및 외부 충격 등의 요인으로 인해 원래의 형태와 다르게 왜곡되거나 약해질 경우 원래의 신호 형태로 재생하여 다시 전송하는 역할을 수행 데이터 브릿지 (Bridge) LAN과 LAN 또는 LAN안에서 컴퓨터 그룹(세그먼트)을 연결하는 기능을 수행 네트워크를 분산적으로 구성할 수 있어 보안성을 높일 수 있다. 스위치 (Switch) 브리지와 같이 LAN과 LAN을 연결하여 훨씬 더 큰 LAN을 만드는 장치 하드웨어를 기반으로 처리하므로 전송 속도가 빠르다. 네트워크 라우터 (Router) 브리지와 같이 LAN과 LAN의 연결 기능에 데이터 전송의 최적 경로를 선택할 수 있는 기능이 추가 된 것으로 서로 다른 LAN이나 LAN과 WAN의 연결도 수행 전송 게이트웨이 (Gateway) 전 계층(1~7계층)의 프로토콜 구조가 다른 네트워크의 연결을 수행한다. LAN에서 다른 네트워크에 데이터를 보내거나 다른 네트워크로부터 데이터를 받아들이는 출입구 역할을 한다. 프로토콜 서로 다른 기기들 간의 데이터 교환을 원활하게 수행할 수 있도록 표준화시켜 놓은 통신 규약 구문(Syntax): 전송하고자 하는 데이터의 형식, 부호화, 신호 레벨 등을 규정 의미(Semantics): 두 기기 간의 효율적이고 정확한 정보 전송을 위한 협조 사항과 오류 관리를 위한 제어 정보를 규정 시간(Timing): 두 기기 간의 통신 속도, 메시지의 순서 제어 등을 규정 프로토콜의 기능 단편화와 재결합 단편화(Fragmentation) 송신 측에서 전송할 데이터를 전송에 알맞은 일정 크기의 작은 블록으로 자르는 작업 재결합(Reassembly) 수신 측에서 단편화된 블록을 원래의 데이터로 모으는 작업 캡슐화(Encapsulation) 단편화된 데이터에 송 수신지 주소, 오류 검출 코드, 프로토콜 기능을 구현하기 위한 프로토콜 제어 정보 등의 정보를 부가하는 것으로 요약화라고 한다. 흐름 제어(Flow Control) 수신 측의 처리 능력에 따라 송신 측에서 송신하는 데이터의 전송량이나 전송 속도를 조절하는 기능 정지-대기(Stop-and-wait), 슬라이딩 윈도우(Sliding Window)방식을 이용 오류 제어(Error Control) 전송 중에 발생하는 오류를 검출하고 정정하여 데이터나 제어 정보의 파손에 대비하는 기능 동기화(Synchronization) 송 수신 측이 같은 상태를 유지하도록 타이밍(Timing)을 맞추는 기능 순서 제어(Sequencing) 전송되는 데이터 블록(PDU)에 전송 순서를 부여하는 기능 연결 위주의 데이터 전송 방식에만 사용 주소 지정(Addressing) 데이터가 목적지까지 정확하게 전송될 수 있도록 목적지 이름, 주소, 경로를 부여하는 기능 다중화(Multplexing) 한 개의 통신 회선을 여러 가입자들이 동시에 사용하도록 하는 기능 경로 제어(Routing) 송 수신 측 간의 송신 경로 중에서 최적의 패킷 교환 경로를 설정하는 기능 전송 서비스 전송하려는 데이터가 사용하도록 하는 별도의 부가 서비스 TCP/IP 인터넷에 연결된 서로 다른 기종의 컴퓨터들이 데이터를 주고받을 수 있도록 하는 표준 프로토콜 TCP 프로토콜과 IP 프로토콜이 결합된 것을 의미 응용 계층, 전송 계층, 인터넷 계층, 네트워크 엑세스 계층으로 이루어져 있다. IP - 네트워크 계층 해당, TCP - 전송 계층 해당 응용 계층의 주요 프로토콜 FTP, SMTP, TELNET, SNMP, DNS, HTTP, MQTT FTP 컴퓨터와 컴퓨터 또는 컴퓨터와 인터넷 사이에 파일을 주고받을 수 있도록 하는 원격 파일 전송 프로토콜 SMTP 전자 우편을 교환하는 서비스 TELNET 멀리 떨어져 있는 컴퓨터에 접속하여 자신의 컴퓨터처럼 사용할 수 있도록 해주는 서비스 프로그램을 실행하는 등 시스템 관리 작업을 할 수 있는 가상의 터미널 기능을 수행 SNMP TCP/IP의 네트워크 관리 프로토콜로 라우터나 허브 등 네트워크 기기의 네트워크 정보를 네트워크 관리 시스템에 보내는데 사용되는 표준 통신 규약 DNS 도메인 네임을 IP 주소로 매핑하는 시스템 HTTP 월드 와이드 웹(www)에서 HTML 문서를 송수신 하기 위한 표준 프로토콜 MQTT 무선으로 네트워크에 연결된 비교적 단순한 기기들 간의 간단한 소통을 목적으로 만들어진 만큼 리소스를 매우 적게 요구하기 때문에 사물 인터넷에 최적화된 프로토콜 경량성, 이식성, 유연성, 안정성 전송 계층의 주요 프로토콜 TCP, UDP, RTCP TCP [ 신뢰성, 연결 지향적, 흐름 제어, 혼잡 제어 ] 양방향 연결형 서비스를 제공한다. 스트럼 위주의 전달(패킷 단위)을 한다. 신뢰성 있는 경로를 확립하고 메시지 전송을 감독한다. 순서 제어, 오류 제어, 흐름 제어 기능을 한다. TCP 프로토콜의 헤더는 기본적을 20byte~60byte까지 사용 가능하나 선택적으로 40byte를 더 추가 할 수 있어 최대 100byte까지 크기 확장 가능하다. UDP [ 체대소다랭 ] Checksum, Destination, Source Port Number, Data, Length / 아래 참고 데이터 전송 전에 연결을 설정하지 않는 비연결형 서비스를 제공한다. / 신뢰성 無 TCP에 비해 상대적으로 단순한 헤더 구조를 가지므로 오버헤드가 적고 흐름 제어나 순서 제어가 없어 전송 속도가 빠르다. 실시간 전송에 유리하며 신뢰성보다는 속도가 중요시되는 네트워크에서 사용된다. RTCP 데이터 전송 모니터링, 최소한의 제어와 인증 기능, 32비트 경계로 끝남 RTP 패킷의 전송 품질을 제어하기 위한 제어 프로토콜이다. 세션에 참여한 참여자들에게 주기적으로 제어 정보를 전송한다. 인터넷(네트워크) 계층의 주요 프로토콜 IP 전송할 데이터에 주소를 지정하고 경로를 설정하는 기능을 한다. 비연결형인 데이터그램 방식을 사용하는 것으로 신뢰성이 보장되지 않는다. ICMP IP와 조합하여 통신 중에 발생하는 오류의 처리와 전송 경로 변경 등을 위한 제어 메시지를 관리하는 역할을 하며 헤더는 8byte로 구성된다. IGMP 멀티캐스트를 지원하는 호스트나 라우터 사이에서 멀티캐스트 그룹 유지를 위해 사용된다. ARP 호스트의 IP 주소를 호스트와 연결된 네트워크 접속 장치의 물리적 주소로 바꾼다. RARP ARP와 반대로 물리적 주소를 IP 주소로 반환하는 기능을 한다. 네트워크 엑세스 계층의 주요 프로토콜 Ethernet - IEEE 802.3 CSMA/CD 방식의 LAN IEEE 802 LAN을 위한 표준 프로토콜 802.7 - 미디어 액세스 제어 프로토콜 802.9 - ISLAN(Integrated Services LAN) 802.10 - 보안 서비스 802.16 - 광대역 무선 액세스(BWA : Broadband Wireless Access) / 대역폭이 넓은 무선 접속(WiMAX) 802.22 - TV White Space HDLC 비트 위주의 데이터 링크 제어 프로토콜 프레임 구조 순서 플래그 → 주소부 → 제어부 → 정보부 → FCS → 플래그 동작 모드 정규(표준) 응답 모드(NRM), 비동기 응답모드(ARM), 비동기 균형(평형) 모드(ABM ) X.25 패킷 교환망을 통한 DTE와 DCE 간의 인터페이스를 제공하는 프로토콜 RS-232C 공중 전화 교환망(PSTN)을 통한 DTE(데이터 단말 장치)와 DCE(데이터 회선 종단 장치) 간의 인터페이스를 제공하는 프로토콜 TCP 포트번호 모뎀 아날로그 회선에서 사용, 디지털 데이터를 아날로그 신호로 변환하거나 그 역의 기능을 함 DSU (Digital Service Unit) - 가입자 측 장비 디지털 회선에 사용, 디지털 데이터를 디지털 신호로 변환 신호의 변복조 방식이 단순하고 저속, 고속 전송 시에 효과적 CSU (Channel Service Unit) - 망 측 장비 T1 및 E1과 같은 트렁크 라인을 그대로 수용할 수 있는 데이터 통신 전용 장비 디지털 트렁크 회선과의 직접 연결에 이용하는 가입자 전송 장치","link":"/2023/06/24/2023/06/1%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A1/"}],"tags":[{"name":"JAVA EE","slug":"JAVA-EE","link":"/tags/JAVA-EE/"},{"name":"JDK","slug":"JDK","link":"/tags/JDK/"},{"name":"JAVA Spring","slug":"JAVA-Spring","link":"/tags/JAVA-Spring/"},{"name":"Apache Tomcat","slug":"Apache-Tomcat","link":"/tags/Apache-Tomcat/"},{"name":"JAVA SE","slug":"JAVA-SE","link":"/tags/JAVA-SE/"},{"name":"JAVA","slug":"JAVA","link":"/tags/JAVA/"},{"name":"VS Code","slug":"VS-Code","link":"/tags/VS-Code/"},{"name":"Git","slug":"Git","link":"/tags/Git/"},{"name":"Github","slug":"Github","link":"/tags/Github/"},{"name":"Node.js","slug":"Node-js","link":"/tags/Node-js/"},{"name":"정보처리 산업기사","slug":"정보처리-산업기사","link":"/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC-%EC%82%B0%EC%97%85%EA%B8%B0%EC%82%AC/"}],"categories":[{"name":"JAVA","slug":"JAVA","link":"/categories/JAVA/"},{"name":"Utile","slug":"Utile","link":"/categories/Utile/"},{"name":"자격증 참고 자료","slug":"자격증-참고-자료","link":"/categories/%EC%9E%90%EA%B2%A9%EC%A6%9D-%EC%B0%B8%EA%B3%A0-%EC%9E%90%EB%A3%8C/"}],"pages":[]}