<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Depra3&#39;s Learning</title>
    <link>https://Depra3.github.io/</link>
    
    <atom:link href="https://depra3.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>개발자가 되고 싶습니다.</description>
    <pubDate>Mon, 31 Jul 2023 10:13:42 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>정보처리 산업기사(2023) 3과목 - 1장 - ①</title>
      <link>https://depra3.github.io/2023/07/31/2023/07/3%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A0/</link>
      <guid>https://depra3.github.io/2023/07/31/2023/07/3%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A0/</guid>
      <pubDate>Mon, 31 Jul 2023 11:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;데이터-베이스-이해&quot;&gt;&lt;a href=&quot;#데이터-베이스-이해&quot; class=&quot;headerlink&quot; title=&quot;데이터 베이스 이해&quot;&gt;&lt;/a&gt;데이터 베이스 이해&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;스택, 트리, 정렬, 데이터 베이스, 데이터 모델, E-R</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="데이터-베이스-이해"><a href="#데이터-베이스-이해" class="headerlink" title="데이터 베이스 이해"></a>데이터 베이스 이해</h1><ul><li>스택, 트리, 정렬, 데이터 베이스, 데이터 모델, E-R모델, 관계형 데이터 베이스, 키, 정규화, 뷰</li></ul><h2 id="자료-구조"><a href="#자료-구조" class="headerlink" title="자료 구조"></a>자료 구조</h2><ul><li>저장 공간의 효율성과 실행 시간의 신속성을 위한 자료 간의 관계, 처리 방법들을 연구 분석하는 것<ul><li><strong>논리적 관점</strong><ul><li>데이터 사이의 관계와 조작 방법을 기술한 추상 자료형(Abstract Data Type)으로 정의<ul><li>프로그램에서 사용되는 데이터와 해당 데이터를 조작하기 위한 함수나 연산들의 집합으로 구성</li></ul></li></ul></li><li><strong>물리적 관점</strong><ul><li>데이터가 메모리에 저장되는 방식 (접근하는 방식에 따라 다양한 자료 구조 존재)<ul><li>ex) 배열, Linked List</li></ul></li></ul></li></ul></li></ul><h2 id="자료-구조-분류"><a href="#자료-구조-분류" class="headerlink" title="자료 구조 분류"></a>자료 구조 분류</h2><ul><li><strong>선형 구조</strong><ul><li><strong>배열</strong><ul><li>동일한 자료형의 데이터들이 같은 크기로 나열되어 순서를 갖는 집합</li><li>데이터 삭제 시 메모리 낭비 발생</li></ul></li></ul><h1 id=""><a href="#" class="headerlink" title=""></a></h1><ul><li><strong>선형 리스트</strong>(Linear List) ( 연속 리스트(배열), 연결 리스트(포인터) )<ul><li>일정한 순서에 의해 나열된 자료 구조</li></ul><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><ul><li><strong>연속 리스트</strong><ul><li>배열과 같이 연속되는 기억 장소에 저장되는 자료 구조</li><li>기억 장소를 연속적으로 배정 받기 때문에 기억 장소 이용 효율은 밀도가 1로서 가장 좋다.</li><li>삽입 및 삭제 시 자료의 이동이 필요</li></ul></li><li><strong>연결 리스트</strong><ul><li>자료들을 반드시 연속적으로 배열시키지는 않고 임의의 기억 공간에 기억 시키되, 자료 항목의 순서에 따라 노드의 포인터 부분을 이용하여 서로 연결 시킨 자료 구조</li><li>노드의 삽입, 삭제 작업이 용이</li><li>기억 공간이 연속적으로 놓여 있지 않아도 저장할 수 있다.</li></ul></li></ul></li></ul><h1 id="-2"><a href="#-2" class="headerlink" title=""></a></h1><ul><li><strong>스택(Stack)</strong><ul><li>리스트의 한쪽 끝으로만 자료의 삽입, 삭제 작업이 이루어지는 자료 구조</li><li>가장 나중에 삽입된 자료가 가장 먼저 삭제되는 후입선출(LIFO) 방식으로 자료를 처리</li></ul><h1 id="-3"><a href="#-3" class="headerlink" title=""></a></h1><ul><li><strong>용도</strong><ul><li>재귀 호출, 후위 표기법, 서브루틴 호출, 인터럽트 처리, 깊이 우선 탐색 등과 같이 왔던 길을 되돌아가는 경우에 사용</li></ul></li><li>모든 기억 공간이 꽉 채워져 있는 상태에서 데이터가 삽입되면 오버플로우가 발생, 더 이상 삭제할 데이터가 없는 상태에서 데이터를 삭제하면 언더플로우가 발생</li></ul><h1 id="-4"><a href="#-4" class="headerlink" title=""></a></h1><ul><li><strong>용어</strong><ul><li>삽입 (Push), 삭제 (Pop), 읽기 (Peek)</li><li>Bottom : 가장 밑바닥, 먼저 들어온 데이터 위치</li><li>Top : 스택의 포인터 위치 or 가장 마지막에 들어온 데이터 위치</li></ul></li></ul></li></ul><h1 id="-5"><a href="#-5" class="headerlink" title=""></a></h1><ul><li><strong>큐(Queue)</strong><ul><li>리스트의 한쪽에서는 삽입 작업이 이루어지고 다른 한쪽에서는 삭제 작업이 이루어지도록 구성한 자료 구조</li><li>가장 먼저 삽입된 자료가 가장 먼저 삭제되는 선입선출 (FIFO) 방식으로 처리</li><li>용어<ul><li><strong>Enqueue</strong> : 데이터 입력하는 함수</li><li><strong>Dequeue</strong> : 데이터 출력하는 함수</li><li><strong>Peek</strong> : front에 위치한 데이터를 읽음</li><li><strong>front (f)</strong> : 가장 먼저 들어온 데이터 공간</li><li><strong>rear (r)</strong> : 가장 마지막에 들어온 데이터 공간</li></ul></li></ul></li></ul><h1 id="-6"><a href="#-6" class="headerlink" title=""></a></h1><ul><li><p><strong>덱(Deque) ( &#x3D; 양방향 큐 )</strong></p><ul><li>삽입과 삭제가 리스트 양쪽 끝에서 모두 발생 할 수 있는 자료 구조 ( FIFO, LIFO 가능)</li><li>스택과 큐의 장점만 따서 구성</li></ul><p>  <img src="/Images/2023/07/3%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A0/Untitled.png"></p></li></ul></li></ul><h1 id="-7"><a href="#-7" class="headerlink" title=""></a></h1><ul><li><strong>비선형 구조</strong><ul><li>**정점(Node,노드)**과 **선분(Branch,가지)**을 이용하여 사이클을 이루지 않도록 구성한 그래프의 특수한 형태<ul><li>노드 (Node) : 하나의 기억 공간</li><li>링크 (Link) : 노드와 노드 사이를 연결하는 선</li></ul></li></ul><h1 id="-8"><a href="#-8" class="headerlink" title=""></a></h1><ul><li><strong>용어</strong><ul><li><strong>노드 (Node)</strong><ul><li>트리를 구성하고 있는 기본 요소로서 자료 항목과 다른 항목에 대한 브랜치를 합친 것</li></ul></li><li><strong>근 노드 (Root Node)</strong><ul><li>트리 구조에서 부모가 없는 최상위 노드</li></ul></li><li><strong>디그리 (Degree)</strong><ul><li>각 노드에서 뻗어 나온 가지 수</li></ul></li><li><strong>단말 노드 (Terminal Node) &#x3D; 잎 노드 (Leaf Node)</strong><ul><li>자식이 하나도 없는 노드 ( Degree가 0인 노드)</li></ul></li><li><strong>자식 노드 (Son Node)</strong><ul><li>어떤 노드에 연결된 하위(다음) 레벨의 노드들</li></ul></li><li><strong>부모 노드 (Parent Node)</strong><ul><li>어떤 노드에 연결된 상위(이전) 레벨의 노드들</li></ul></li><li><strong>형제 노드 (Brother Node, Siblings)</strong><ul><li>동일한 부모를 갖는 노드들</li></ul></li><li><strong>트리의 디그리(degree)</strong><ul><li>노드들의 디그리 중에서 가장 많은 수</li></ul></li></ul></li></ul><h1 id="-9"><a href="#-9" class="headerlink" title=""></a></h1><ul><li><strong>트리의 운행법</strong><ul><li>트리를 구성하는 각 노드들을 찾아가는 방법<ul><li>이진 트리를 운행하는 방법은 산술식 표기법과 연관성을 갖음</li></ul></li><li>3종류<ul><li><p><strong>Preorder 운행 (전위 순회)</strong></p><ul><li><strong>Root → Left → Right</strong></li></ul><p>  <img src="/Images/2023/07/3%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A0/Untitled%201.png"></p><ul><li><strong>순회 경로 : A - B - D - H - I - E - J - K - C - F - L - G</strong></li></ul></li></ul><h1 id="-10"><a href="#-10" class="headerlink" title=""></a></h1><ul><li><p><strong>Inorder 운행 (중위 순회)</strong></p><ul><li><strong>Left → Root → Right</strong></li></ul><p>  <img src="/Images/2023/07/3%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A0/Untitled%202.png"></p></li></ul><h1 id="-11"><a href="#-11" class="headerlink" title=""></a></h1><ul><li><p><strong>Postorder 운행 (후위 순회)</strong></p><ul><li><strong>Left → Right → Root</strong></li></ul><p>  <img src="/Images/2023/07/3%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A0/Untitled%203.png"></p></li></ul></li></ul></li></ul><h1 id="-12"><a href="#-12" class="headerlink" title=""></a></h1><ul><li><strong>수식의 표기법</strong><ul><li>산술식을 계산하기 위해 기억 공간에 기억시키는 방법</li><li>3종류<ul><li><strong>전위 표기법 (PreFix) : 연산자 → Left → Right</strong></li><li><strong>중위 표기법(InFix) : Left → 연산자 → Right</strong></li><li><strong>후위 표기법(PostFix) : Left → Right → 연산자</strong></li></ul></li></ul></li></ul><h1 id="-13"><a href="#-13" class="headerlink" title=""></a></h1><ul><li><strong>그래프(Graph)</strong><ul><li><strong>방향 그래프의 최대 간선 수 : n(n-1)</strong></li><li><strong>무방향 그래프의 최대 간선 수 : n(n-1)&#x2F;2</strong></li></ul></li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/%EC%9E%90%EA%B2%A9%EC%A6%9D-%EC%B0%B8%EA%B3%A0-%EC%9E%90%EB%A3%8C/">자격증 참고 자료</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC-%EC%82%B0%EC%97%85%EA%B8%B0%EC%82%AC/">정보처리 산업기사</category>
      
      
      <comments>https://depra3.github.io/2023/07/31/2023/07/3%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>정보처리 산업기사(2023) 2과목 - 2장</title>
      <link>https://depra3.github.io/2023/07/29/2023/07/2%EA%B3%BC%EB%AA%A9-2%EC%9E%A5/</link>
      <guid>https://depra3.github.io/2023/07/29/2023/07/2%EA%B3%BC%EB%AA%A9-2%EC%9E%A5/</guid>
      <pubDate>Sat, 29 Jul 2023 11:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;프로그래밍-언어-활용&quot;&gt;&lt;a href=&quot;#프로그래밍-언어-활용&quot; class=&quot;headerlink&quot; title=&quot;프로그래밍 언어 활용&quot;&gt;&lt;/a&gt;프로그래밍 언어 활용&lt;/h1&gt;&lt;h2 id=&quot;2장-프로그램-구현&quot;&gt;&lt;a href=&quot;#2장-프로그램</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="프로그래밍-언어-활용"><a href="#프로그래밍-언어-활용" class="headerlink" title="프로그래밍 언어 활용"></a>프로그래밍 언어 활용</h1><h2 id="2장-프로그램-구현"><a href="#2장-프로그램-구현" class="headerlink" title="2장 프로그램 구현"></a>2장 프로그램 구현</h2><ul><li>웹 서버, 웹 애플리케이션 서버, 개발 언어 선정 기준, 프레임 워크, Spring, 제어의 역흐름, 결합도, 응집도, 재사용, API</li></ul><h1 id="모듈"><a href="#모듈" class="headerlink" title="모듈"></a>모듈</h1><ul><li><strong>개요</strong><ul><li>모듈화를 통해 분리된 시스템의 각 기능들로, 서브루틴, 서브 시스템, 소프트웨어 내의 프로그램, 작업 단위 등과 같은 의미로 사용됨</li><li>모듈의 독립성은 <strong>결합도와 응집도</strong>에 의해 측정</li><li><strong>독립성을 높이려면?</strong>  <strong>결합도 ↓, 응집도  ↑, 모듈의 크기  ↓</strong></li><li><strong>모듈의 응집도는 높고 결합도는 낮은 설계가 이상적</strong><ul><li>모듈의 내부 구조가 각 요소들이 서로 연관되어 있으면서도 모듈 간의 의존성이 적은 구조가 바람직</li></ul></li></ul></li></ul><h1 id=""><a href="#" class="headerlink" title=""></a></h1><ul><li><strong>결합도 (Coupling) [ 자 스 제 외 공 내 ]</strong><ul><li><strong>모듈 간에 상호 의존하는 정도</strong> 또는 <strong>두 모듈 사이의 연관 관계를 의미</strong>한다.</li><li><strong>결합도 ↑ → 독립성 ↓ → 의존성 ↑ → 설계의 품질 ↓</strong></li><li><strong>결합도 약  →  강 ( 결합도가 약할수록 모듈의 독립성 ↑</strong> )<ul><li><strong>자료 결합도 (Data Coupling)</strong><ul><li>다른 모듈 호출하면서 매개 변수나 인수로 데이터를 넘겨주고 처리 결과를 다시 돌려주는 방식</li></ul></li><li><strong>스탬프(검인) 결합도 (Stamp Coupling)</strong><ul><li>두 모듈이 동일한 자료 구조를 조회하는 경우의 결합도</li><li>자료 구조의 어떠한 변화, 즉 포맷이나 구조의 변화는 그것을 조회하는 모든 모듈 및 변화되는 필드를 실제로 조회하지 않는 모듈에 까지도 영향을 미친다.</li></ul></li><li><strong>제어 결합도 (Control Coupling)</strong><ul><li>한 모듈이 다른 모듈의 상세한 처리 절차를 알고 있어 이를 통제하는 경우나 처리 기능이 두 모듈에 분리되어 설계된 경우에 발생</li></ul></li><li><strong>외부 결합도 (Exernal Coupling)</strong><ul><li>어떤 모듈에서 선언한 데이터(변수)를 외부의 다른 모듈에서 참조할 때의 결합도</li></ul></li><li><strong>공통(공유) 결합도 (Common Coupling)</strong><ul><li>공유되는 공통 데이터 영역을 여러 모듈이 사용할 때의 결합도</li></ul></li><li><strong>내용 결합도 (Content Coupling)</strong><ul><li>한 모듈이 다른 모듈의 내부 기능 및 그 내부 자료를 직접 참조하거나 수정할 때의 결합도</li></ul></li></ul></li></ul></li></ul><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><ul><li><strong>응집도 (Cohesion) [ 우 논 시 절 통 순 기 ]</strong><ul><li>응집도는 <strong>정보 은닉 개념을 확장한 것</strong>으로, 명령어나 호출문 등 모듈의 내부 요소들의 서로 관련되어 있는 정도, 즉 <strong>모듈이 독립적인 기능으로 정의되어 있는 정도를 의미</strong>합니다.</li><li><strong>응집도 약 → 강 ( 응집도가 약할 수록 품질 ↓ , 독립성 ↓)</strong></li></ul><h1 id="-2"><a href="#-2" class="headerlink" title=""></a></h1><ul><li><strong>우연적 응집도 (Coincidental Cohesion)</strong><ul><li>모듈 내부의 <strong>각 구성 요소들이 서로 관련 없는 요소로만 구성</strong>된 경우의 응집도</li></ul></li><li><strong>논리적 응집도 (Logical Cohesion)</strong><ul><li><strong>유사한 성격을 갖거나 특정 형태</strong>로 분류되는 처리 요소들로 하나의 모듈이 형성되는 경우의 응집도</li></ul></li><li><strong>시간적 응집도 (Temporal Cohesion)</strong><ul><li><strong>특정 시간에 처리되는 몇 개의 기능</strong>을 모아 하나의 모듈로 작성할 경우의 응집도</li></ul></li><li><strong>절차적 응집도 (Procedural Cohesion)</strong><ul><li>모듈이 다수의 관련 기능을 가질 때 모듈 안의 구성 요소들이 그 기능을 <strong>순차적으로 수행</strong>할 경우의 응집도</li></ul></li><li><strong>교환(통신)적 응집도 (Communication Cohesion)</strong><ul><li><strong>동일한 입력과 출력을 사용하여 서로 다른 기능을 수행</strong>하는 구성 요소들이 모였을 경우의 응집도</li></ul></li><li><strong>순차적 응집도 (Sequential Cohesion)</strong><ul><li>모듈 내 <strong>하나의 활동으로 부터 나온 출력 데이터를 그 다음 활동의 입력 데이터로 사용</strong>할 경우의 응집도</li></ul></li><li><strong>기능적 응집도 (Functional Cohesion)</strong><ul><li>모듈 내부의 <strong>모든 기능 요소들이 단일 문제와 연관되어 수행</strong>될 경우의 응집도</li></ul></li></ul></li></ul><h1 id="-3"><a href="#-3" class="headerlink" title=""></a></h1><ul><li><strong>팬인 (Fan-In) &#x2F; 팬아웃 (Fan-Out)</strong><ul><li><strong>팬인</strong> : 제어하는 모듈의 수 (화살표가 들어오는 개수)</li><li><strong>팬아웃</strong> : 제어되는 모듈의 수 (화살표가 나가는 개수)</li><li><strong>복잡도를 최적화 하려면 팬인 ↑,  팬아웃 ↓</strong></li></ul></li></ul><h1 id="-4"><a href="#-4" class="headerlink" title=""></a></h1><ul><li>소프트웨어 개발 보안의 개요<ul><li>개발 과정에서 발생할 수 있는 보안 취약점을 최소화하여 보안 위협으로부터 안전한 소프트웨어를 개발하기 위한 일련의 보안 활동</li><li><strong>보안 요소 [ 부 인 무 기 가 ]</strong><ul><li>부인 방지, 인증, 무결성<ul><li>오직 인가 된 사용자만 수정</li></ul></li><li>기밀성<ul><li>인가 된 사용자 접근 허용, 노출되면 읽을 수 없음</li></ul></li><li>가용성<ul><li>인가 받은 사용자는 언제라도 사용 가능</li></ul></li></ul></li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/%EC%9E%90%EA%B2%A9%EC%A6%9D-%EC%B0%B8%EA%B3%A0-%EC%9E%90%EB%A3%8C/">자격증 참고 자료</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC-%EC%82%B0%EC%97%85%EA%B8%B0%EC%82%AC/">정보처리 산업기사</category>
      
      
      <comments>https://depra3.github.io/2023/07/29/2023/07/2%EA%B3%BC%EB%AA%A9-2%EC%9E%A5/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>정보처리 산업기사(2023) 2과목-1장-②</title>
      <link>https://depra3.github.io/2023/07/28/2023/07/2%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A1/</link>
      <guid>https://depra3.github.io/2023/07/28/2023/07/2%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A1/</guid>
      <pubDate>Fri, 28 Jul 2023 12:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;제어문&quot;&gt;&lt;a href=&quot;#제어문&quot; class=&quot;headerlink&quot; title=&quot;제어문&quot;&gt;&lt;/a&gt;제어문&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;명령어가 서술된 순서를 변경할 수 있음&lt;/li&gt;
&lt;li&gt;if문, 다중 if문, switch문, goto문, </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="제어문"><a href="#제어문" class="headerlink" title="제어문"></a>제어문</h1><ul><li>명령어가 서술된 순서를 변경할 수 있음</li><li>if문, 다중 if문, switch문, goto문, 반복문</li></ul><h1 id="조건문"><a href="#조건문" class="headerlink" title="조건문"></a>조건문</h1><ul><li><strong>프로그램 흐름에 원하는 기준을 조건으로 분기를 추가하여 흐름을 제어</strong></li><li>if 문 : <a href="https://depra3.github.io/2023/07/12/2023/07/JAVA-%EC%A1%B0%EA%B1%B4%EB%AC%B8-IF%EB%AC%B8/">JAVA - 조건문 - IF문</a></li><li>switch ~ case 문 : <a href="https://depra3.github.io/2023/07/14/2023/07/JAVA-%EC%A1%B0%EA%B1%B4%EB%AC%B8-Switch~Case%EB%AC%B8/">JAVA - 조건문 - Switch ~ Case문</a></li></ul><h1 id="반복문"><a href="#반복문" class="headerlink" title="반복문"></a>반복문</h1><ul><li><strong>프로그램 흐름에서 일정 횟수를 반복하고 싶은 구간에 사용하는 제어문</strong></li><li>while 문 : <a href="https://depra3.github.io/2023/07/15/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-while%EB%AC%B8/">JAVA - 반복문 - while문</a></li><li>do ~ while 문 : <a href="https://depra3.github.io/2023/07/17/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-do~while%EB%AC%B8/">JAVA - 반복문 - do ~ while문</a></li><li>for 문 : <a href="https://depra3.github.io/2023/07/18/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-for%EB%AC%B8/">JAVA - 반복문 - for문</a></li></ul><h1 id="goto-문"><a href="#goto-문" class="headerlink" title="goto 문"></a>goto 문</h1><ul><li>프로그램 실행 중 <strong>현재의 위치에서 원하는 다른 문장으로 이동</strong>하여 수행을 계속하기 위해 사용</li></ul><h3 id="사용-형식"><a href="#사용-형식" class="headerlink" title="사용 형식"></a>사용 형식</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">goto 레이블;</span><br><span class="line"></span><br><span class="line">레이블:</span><br><span class="line">실행문;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="배열"><a href="#배열" class="headerlink" title="배열"></a>배열</h1><ul><li>1차원 배열 : <a href="https://depra3.github.io/2023/07/20/2023/07/JAVA-%EB%B0%B0%EC%97%B4-%E2%91%A0/">JAVA - 배열 - 1차원 배열</a></li><li>다차원 배열 : <a href="https://depra3.github.io/2023/07/24/2023/07/JAVA-%EB%B0%B0%EC%97%B4-%E2%91%A1/">JAVA - 배열 - 다차원 배열</a></li></ul><h1 id="포인터"><a href="#포인터" class="headerlink" title="포인터"></a>포인터</h1><ul><li><strong>프로그래밍 언어에서 다른 변수, 혹은 그 변수의 메모리 공간주소를 가리키는 변수</strong></li><li>C언어에서 사용</li></ul><h3 id="사용-예시"><a href="#사용-예시" class="headerlink" title="사용 예시"></a>사용 예시</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 포인터 변수 선언</span></span><br><span class="line">자료형 * 변수명;</span><br><span class="line">ex) <span class="type">int</span> *a;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 포인터 주소값</span></span><br><span class="line">&amp;변수명;</span><br><span class="line">ex) b = &amp;a;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 포인터 변수값</span></span><br><span class="line">*변수명;</span><br><span class="line">ex) c = *a;</span><br></pre></td></tr></table></figure><h3 id="포인터와-배열"><a href="#포인터와-배열" class="headerlink" title="포인터와 배열"></a>포인터와 배열</h3><ul><li>배열 a 와 포인터변수 *a 비교</li></ul><table><thead><tr><th>a[0]</th><th>a[1]</th><th>a[2]</th><th>a[3]</th><th>a[4]</th></tr></thead><tbody><tr><td>*(a+0)</td><td>*(a+1)</td><td>*(a+2)</td><td>*(a+3)</td><td>*(a+4)</td></tr></tbody></table><h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><h3 id="슬라이스-Slice"><a href="#슬라이스-Slice" class="headerlink" title="슬라이스(Slice)"></a>슬라이스(Slice)</h3><ul><li>문자열이나 리스트와 같은 순차형 객체에서 일부를 잘라 반환하는 형식</li></ul><h3 id="사용-예시-①"><a href="#사용-예시-①" class="headerlink" title="사용 예시 ①"></a>사용 예시 ①</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># start 인덱스에서 stop-1 인덱스까지 슬라이스</span></span><br><span class="line">객체명 [start : stop]</span><br><span class="line"></span><br><span class="line"><span class="comment"># start 인덱스에서 마지막까지 슬라이스</span></span><br><span class="line">객체명 [start : ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 처음부터 stop-1 인덱스까지 슬라이스</span></span><br><span class="line">객체명 [ : stop]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 처음부터 마지막 전체 반환</span></span><br><span class="line">객체명 [ : ]</span><br></pre></td></tr></table></figure><h3 id="사용-예시-②"><a href="#사용-예시-②" class="headerlink" title="사용 예시 ②"></a>사용 예시 ②</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># start 인덱스에서 stop-1 인덱스까지 step값 만큼씩 점프하며 슬라이스</span></span><br><span class="line">객체명 [start : stop : step]</span><br><span class="line"></span><br><span class="line"><span class="comment"># start 인덱스에서 마지막까지 슬라이스</span></span><br><span class="line">객체명 [start : :]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 처음부터 stop-1 인덱스까지 슬라이스</span></span><br><span class="line">객체명 [ : stop : ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 처음부터 마지막까지 step값 만큼씩 점프하며 슬라이스</span></span><br><span class="line">객체명 [ : : step]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 처음부터 마지막 전체 반환</span></span><br><span class="line">객체명 [ : : ]</span><br></pre></td></tr></table></figure><h1 id="스크립트-언어의-종류"><a href="#스크립트-언어의-종류" class="headerlink" title="스크립트 언어의 종류"></a>스크립트 언어의 종류</h1><ul><li><strong>자바스크립트 (JAVA Script)</strong><ul><li>웹페이지 동작 제어, 클라이언트용 스크립트 언어, 객체 지향 프로그래밍 성격을 가짐</li></ul></li><li><strong>VB 스크립트</strong><ul><li>마이크로소프트 사의 애플리케이션 컨트롤</li></ul></li><li><strong>ASP</strong><ul><li>Windows 계열 수행 가능한 프로그래밍 언어</li></ul></li><li><strong>JSP</strong><ul><li>JAVA 서버용 스크립트</li></ul></li><li><strong>PHP</strong><ul><li>Linux, Unix, Windows 사용 가능, C, JAVA 문법 유사함</li></ul></li><li><strong>Python</strong><ul><li><strong>귀도 반로섬이</strong> 발표한 <strong>인터프리터 언어</strong>, 객체 지향 기능, 플랫폼 독립적, 문법 간단</li></ul></li><li><strong>쉘 스크립트</strong><ul><li><strong>Unix&#x2F;Linux 계열의 쉘</strong>에서 사용되는 명령어, 컴파일 단계가 없음, ‘.sh’ 붙음<ul><li>Bash Shell, Bourne Shell, C shell, Korn Shell 등<ul><li>선택형 : if, case</li><li>반복형 : for, while, until</li></ul></li></ul></li></ul></li><li><strong>Basic</strong><ul><li>절차 지향 기능 지원하는 대화형 인터프리터, 초보자도 쉽게 사용할 수 있는 문법 구조</li></ul></li></ul><h1 id="라이브러리-개념"><a href="#라이브러리-개념" class="headerlink" title="라이브러리 개념"></a><strong>라이브러리 개념</strong></h1><ul><li><strong>프로그램을 효율적으로 개발할 수 있도록 자주 사용하는 함수나 데이터들을 미리 만들어 모아 놓은 집합체</strong><ul><li>도움말, 설치 파일, 샘플 코드 제공</li></ul></li><li><strong>모듈</strong> : 하나의 기능이 한 개의 파일을 구현된 상태</li><li><strong>패키지</strong> : 하나의 패키지 폴더 안에 여러 개의 모듈</li></ul><h2 id="C언어의-대표적인-표준-라이브러리"><a href="#C언어의-대표적인-표준-라이브러리" class="headerlink" title="C언어의 대표적인 표준 라이브러리"></a><strong>C언어의 대표적인 표준 라이브러리</strong></h2><ul><li><strong>#include &lt;stdio.h&gt;</strong></li><li><strong>stdio.h</strong> : 데이터의 입출력에 사용되는 기능 제공</li><li><strong>math.h</strong> : 수학 함수들 제공</li><li><strong>string.h</strong> : 문자열 처리에 사용되는 기능 제공</li><li><strong>stdlib.h</strong> : 자료형 변환, 난수 발생, 메모리 할당에 사용되는 기능을 제공</li><li><strong>time.h</strong> : 시간 처리에 사용되는 기능 제공</li></ul>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/%EC%9E%90%EA%B2%A9%EC%A6%9D-%EC%B0%B8%EA%B3%A0-%EC%9E%90%EB%A3%8C/">자격증 참고 자료</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC-%EC%82%B0%EC%97%85%EA%B8%B0%EC%82%AC/">정보처리 산업기사</category>
      
      
      <comments>https://depra3.github.io/2023/07/28/2023/07/2%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA-클래스, 인스턴스, 객체</title>
      <link>https://depra3.github.io/2023/07/26/2023/07/JAVA-%ED%81%B4%EB%9E%98%EC%8A%A4,%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4,%EA%B0%9D%EC%B2%B4/</link>
      <guid>https://depra3.github.io/2023/07/26/2023/07/JAVA-%ED%81%B4%EB%9E%98%EC%8A%A4,%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4,%EA%B0%9D%EC%B2%B4/</guid>
      <pubDate>Wed, 26 Jul 2023 11:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h1&gt;&lt;h1 id=&quot;클래스&quot;&gt;&lt;a href=&quot;#클래스&quot; class=&quot;headerlink&quot; title=&quot;클래스&quot;&gt;&lt;/a&gt;클래스&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;객</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="클래스"><a href="#클래스" class="headerlink" title="클래스"></a>클래스</h1><ul><li>객체를 만들어 내기 위한 <strong>일종의 설계도 혹는 틀</strong>이다.<ul><li><strong>와플(객체)</strong> 을 만들기 위한 <strong>와플팬(클래스)</strong> 이다.</li></ul></li><li>객체를 만들어 내기 위해 필요한 <strong>속성(변수)</strong> 과 <strong>동작(메서드)</strong> 으로 이루어져 있다.</li></ul><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><h1 id="인스턴스"><a href="#인스턴스" class="headerlink" title="인스턴스"></a>인스턴스</h1><ul><li><strong>클래스(설계도 혹은 틀)를 바탕</strong>으로 <strong>소프트웨어 세계에 구현된 구체적인 실체</strong>이다.<ul><li><strong>와플팬(클래스)</strong> 을 통해 만들어낸 <strong>와플(객체) 하나하나를 해당 클래스의 인스턴스</strong>라고 한다.<ul><li><strong>와플(객체)</strong> 마다 딸기 와플, 바나나 와플 등으로 다르지만, 하나의 <strong>와플팬(클래스)</strong> 을 통해 만들어낸 경우 해당 <strong>클래스의 인스턴스</strong>인 것이다.</li></ul></li></ul></li></ul><h1 id="-2"><a href="#-2" class="headerlink" title=""></a></h1><h1 id="객체"><a href="#객체" class="headerlink" title="객체"></a>객체</h1><ul><li><strong>클래스(설계도)로 구현한 모든 대상</strong>이다.</li><li><strong>인스턴스</strong>와 <strong>혼용해서 표현</strong>하기도 한다.</li><li><strong>참고 : <a href="https://depra3.github.io/2023/07/25/2023/07/JAVA-%EA%B0%9D%EC%B2%B4/">Depra3’s JAVA - 객체</a></strong></li></ul>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/JAVA/">JAVA</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EA%B0%9C%EB%85%90/">개념</category>
      
      <category domain="https://Depra3.github.io/tags/%EA%B0%9D%EC%B2%B4/">객체</category>
      
      <category domain="https://Depra3.github.io/tags/%ED%81%B4%EB%9E%98%EC%8A%A4/">클래스</category>
      
      <category domain="https://Depra3.github.io/tags/%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4/">인스턴스</category>
      
      
      <comments>https://depra3.github.io/2023/07/26/2023/07/JAVA-%ED%81%B4%EB%9E%98%EC%8A%A4,%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4,%EA%B0%9D%EC%B2%B4/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA-객체</title>
      <link>https://depra3.github.io/2023/07/25/2023/07/JAVA-%EA%B0%9D%EC%B2%B4/</link>
      <guid>https://depra3.github.io/2023/07/25/2023/07/JAVA-%EA%B0%9D%EC%B2%B4/</guid>
      <pubDate>Tue, 25 Jul 2023 11:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;객체-Object&quot;&gt;&lt;a href=&quot;#객체-Object&quot; class=&quot;headerlink&quot; title=&quot;객체 (Object)&quot;&gt;&lt;/a&gt;객체 (Object)&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;물리적으로 존재&lt;/strong&gt;하거나 &lt;st</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="객체-Object"><a href="#객체-Object" class="headerlink" title="객체 (Object)"></a>객체 (Object)</h1><ul><li><strong>물리적으로 존재</strong>하거나 <strong>추상적으로 생각할 수 있는 것 중</strong>에서 <strong>자신과 다른 것을 식별 가능한 것</strong><ul><li><strong>물리적</strong><ul><li>사람, 책, 자동차, 컴퓨터 등</li></ul></li><li><strong>추상적</strong><ul><li>학과, 부서, 종류 등</li></ul></li></ul></li></ul><h1 id="객체의-구성"><a href="#객체의-구성" class="headerlink" title="객체의 구성"></a>객체의 구성</h1><ul><li><strong>속성(property)</strong><ul><li>자동차의 <strong>속성</strong> - 제조사, 모델, 색깔 등</li><li><strong>멤버 변수(member variable), 특성(attribute), 필드(field), 상태(state)</strong></li></ul></li></ul><h1 id=""><a href="#" class="headerlink" title=""></a></h1><ul><li><strong>기능(function)</strong><ul><li>자동차의 <strong>기능</strong> - 시동, 주행, 정지 등</li><li><strong>메서드(method), 함수(function), 행위(behavior)</strong></li></ul></li></ul><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><ul><li><strong>예시</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Car</span> &#123;</span><br><span class="line"><span class="comment">// 속성 - 멤버 변수</span></span><br><span class="line"><span class="keyword">public</span> String company;   <span class="comment">// 제조사</span></span><br><span class="line"><span class="keyword">public</span> String model;     <span class="comment">// 자동차 모델</span></span><br><span class="line"><span class="keyword">public</span> String color;     <span class="comment">// 자동차 색깔</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> maxSpeed;     <span class="comment">// 최고 속도</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> currentSpeed; <span class="comment">// 현재 속도</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 기능 - 메서드</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">speedUp</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.currentSpeed = <span class="built_in">this</span>.currentSpeed + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">speedDown</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.currentSpeed--;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">this</span>.currentSpeed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCurrentSpeed</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">this</span>.currentSpeed;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/JAVA/">JAVA</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EA%B0%9C%EB%85%90/">개념</category>
      
      <category domain="https://Depra3.github.io/tags/%EA%B0%9D%EC%B2%B4/">객체</category>
      
      <category domain="https://Depra3.github.io/tags/%EA%B0%9D%EC%B2%B4%EC%9D%98-%EC%86%8D%EC%84%B1/">객체의 속성</category>
      
      <category domain="https://Depra3.github.io/tags/%EA%B0%9D%EC%B2%B4%EC%9D%98-%EA%B8%B0%EB%8A%A5/">객체의 기능</category>
      
      <category domain="https://Depra3.github.io/tags/%EB%A9%94%EC%84%9C%EB%93%9C/">메서드</category>
      
      <category domain="https://Depra3.github.io/tags/%EB%A9%A4%EB%B2%84-%EB%B3%80%EC%88%98/">멤버 변수</category>
      
      <category domain="https://Depra3.github.io/tags/%ED%95%84%EB%93%9C/">필드</category>
      
      
      <comments>https://depra3.github.io/2023/07/25/2023/07/JAVA-%EA%B0%9D%EC%B2%B4/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA - 배열 - ② 다차원 배열</title>
      <link>https://depra3.github.io/2023/07/24/2023/07/JAVA-%EB%B0%B0%EC%97%B4-%E2%91%A1/</link>
      <guid>https://depra3.github.io/2023/07/24/2023/07/JAVA-%EB%B0%B0%EC%97%B4-%E2%91%A1/</guid>
      <pubDate>Mon, 24 Jul 2023 12:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;배열-정의&quot;&gt;&lt;a href=&quot;#배열-정의&quot; class=&quot;headerlink&quot; title=&quot;배열 정의&quot;&gt;&lt;/a&gt;배열 정의&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;동일한 데이터 타입의 여러 데이터를 하나의 묶음으로 다루는 것&lt;/strong&gt;이</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="배열-정의"><a href="#배열-정의" class="headerlink" title="배열 정의"></a>배열 정의</h1><ul><li><strong>동일한 데이터 타입의 여러 데이터를 하나의 묶음으로 다루는 것</strong>이다.</li></ul><h1 id="다차원-배열"><a href="#다차원-배열" class="headerlink" title="다차원 배열"></a>다차원 배열</h1><ul><li><p><strong>배열 요소로 또 다른 배열을 가진 배열</strong>이다.</p></li><li><p><strong>ex) 2차원 배열</strong></p><table><thead><tr><th>a[0][0]</th><th>a[0][1]</th><th>a[0][2]</th><th>a[0][3]</th><th>…</th></tr></thead><tbody><tr><td>a[1][0]</td><td>a[1][1]</td><td>a[1][2]</td><td>a[1][3]</td><td>…</td></tr><tr><td>a[2][0]</td><td>a[2][1]</td><td>a[2][2]</td><td>a[2][3]</td><td>…</td></tr></tbody></table></li></ul><h1 id="배열-선언-형식"><a href="#배열-선언-형식" class="headerlink" title="배열 선언 형식"></a>배열 선언 형식</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ①</span></span><br><span class="line">데이터타입[][] 변수명 = <span class="keyword">new</span> 데이터타입[길이][길이];</span><br><span class="line">데이터타입[] 변수명[] = <span class="keyword">new</span> 데이터타입[길이][길이];</span><br><span class="line">데이터타입 변수명[][] = <span class="keyword">new</span> 데이터타입[길이][길이];</span><br><span class="line"></span><br><span class="line"><span class="comment">// ②</span></span><br><span class="line">데이터타입[][] 변수명;</span><br><span class="line">변수명 = <span class="keyword">new</span> 데이터타입[][] &#123; &#123;변수<span class="number">1</span>, 변수<span class="number">2</span>, ....&#125;, &#123; 변수<span class="number">1</span>, 변수<span class="number">2</span>, .... &#125; &#125;;</span><br><span class="line">데이터타입[] 변수명[];</span><br><span class="line">변수명 = <span class="keyword">new</span> 데이터타입[][] &#123; &#123;변수<span class="number">1</span>, 변수<span class="number">2</span>, ....&#125;, &#123; 변수<span class="number">1</span>, 변수<span class="number">2</span>, .... &#125; &#125;;</span><br><span class="line">데이터타입 변수명[][];</span><br><span class="line">변수명 = <span class="keyword">new</span> 데이터타입[][] &#123; &#123;변수<span class="number">1</span>, 변수<span class="number">2</span>, ....&#125;, &#123; 변수<span class="number">1</span>, 변수<span class="number">2</span>, .... &#125; &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ③</span></span><br><span class="line">데이터타입[][] 변수명 = &#123; &#123;변수<span class="number">1</span>, 변수<span class="number">2</span>, ....&#125;, &#123; 변수<span class="number">1</span>, 변수<span class="number">2</span>, .... &#125; &#125;;</span><br><span class="line">데이터타입[] 변수명[] = &#123; &#123;변수<span class="number">1</span>, 변수<span class="number">2</span>, ....&#125;, &#123; 변수<span class="number">1</span>, 변수<span class="number">2</span>, .... &#125; &#125;;</span><br><span class="line">데이터타입 변수명[][] = &#123; &#123;변수<span class="number">1</span>, 변수<span class="number">2</span>, ....&#125;, &#123; 변수<span class="number">1</span>, 변수<span class="number">2</span>, .... &#125; &#125;;</span><br></pre></td></tr></table></figure><h1 id=""><a href="#" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 방식 ①</span></span><br><span class="line"><span class="type">int</span>[][] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>][<span class="number">3</span>];</span><br><span class="line"><span class="type">double</span>[] aa[] = <span class="keyword">new</span> <span class="title class_">double</span>[<span class="number">3</span>][<span class="number">3</span>];</span><br><span class="line">String aaa[][] = <span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">3</span>][<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 방식 ②</span></span><br><span class="line"><span class="type">int</span>[][] b;</span><br><span class="line">b = <span class="keyword">new</span> <span class="title class_">int</span>[][] &#123;</span><br><span class="line">&#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;,</span><br><span class="line">&#123; <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line">&#125;; </span><br><span class="line"><span class="type">double</span>[] bb[];</span><br><span class="line">bb = <span class="keyword">new</span> <span class="title class_">double</span>[][] &#123;</span><br><span class="line">&#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;,</span><br><span class="line">&#123; <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line">String bbb[][];</span><br><span class="line">bbb = <span class="keyword">new</span> <span class="title class_">String</span>[][] &#123;</span><br><span class="line">&#123; <span class="string">&quot;일&quot;</span>, <span class="string">&quot;이&quot;</span>, <span class="string">&quot;삼&quot;</span>, <span class="string">&quot;사&quot;</span>&#125;,</span><br><span class="line">&#123; <span class="string">&quot;이&quot;</span>, <span class="string">&quot;삼&quot;</span>, <span class="string">&quot;사&quot;</span>, <span class="string">&quot;오&quot;</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 방식 ③</span></span><br><span class="line"><span class="type">int</span>[][] c = &#123;</span><br><span class="line">&#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;,</span><br><span class="line">&#123; <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">double</span>[][] cc = &#123;</span><br><span class="line">&#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;,</span><br><span class="line">&#123; <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line">String ccc[][] = &#123;</span><br><span class="line">&#123; <span class="string">&quot;일&quot;</span>, <span class="string">&quot;이&quot;</span>, <span class="string">&quot;삼&quot;</span>, <span class="string">&quot;사&quot;</span>&#125;,</span><br><span class="line">&#123; <span class="string">&quot;이&quot;</span>, <span class="string">&quot;삼&quot;</span>, <span class="string">&quot;사&quot;</span>, <span class="string">&quot;오&quot;</span>&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><ul><li><p><strong>출력</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 방식 ① Arrays 클래스 사용</span></span><br><span class="line"></span><br><span class="line">System.out.println(Arrays.toString(b[<span class="number">0</span>]));</span><br><span class="line">System.out.println(Arrays.toString(bb[<span class="number">0</span>]));</span><br><span class="line">System.out.println(Arrays.toString(bbb[<span class="number">0</span>]));</span><br><span class="line">System.out.println();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 방식 ② 반복문 for 문 사용</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; c.length; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; c[i].length; j++) &#123;</span><br><span class="line">System.out.print(c[i][j] + <span class="string">&quot;  &quot;</span>);</span><br><span class="line">System.out.print(cc[i][j] + <span class="string">&quot;  &quot;</span>);</span><br><span class="line">System.out.print(ccc[i][j]);</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 방식 ③ 반복문 foreach 문 사용</span></span><br><span class="line"><span class="keyword">for</span> (String[] str : ccc) &#123;</span><br><span class="line"><span class="keyword">for</span> (String s : str) &#123;</span><br><span class="line">System.out.print(s + <span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EB%B0%B0%EC%97%B4-%E2%91%A1/Untitled.png"></p></li></ul><h1 id="주의할-점"><a href="#주의할-점" class="headerlink" title="주의할 점"></a>주의할 점</h1><ul><li><strong>배열 요소에 배열이 있기 때문에, 1차원 배열처럼 출력하면 배열 주소가 출력</strong>된다.</li></ul><h1 id="-2"><a href="#-2" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(Arrays.toString(b));</span><br></pre></td></tr></table></figure></li></ul><h1 id="-3"><a href="#-3" class="headerlink" title=""></a></h1><ul><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EB%B0%B0%EC%97%B4-%E2%91%A1/Untitled%201.png"></p></li></ul>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/JAVA/">JAVA</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EA%B0%9C%EB%85%90/">개념</category>
      
      <category domain="https://Depra3.github.io/tags/%EB%B0%B0%EC%97%B4/">배열</category>
      
      <category domain="https://Depra3.github.io/tags/%EB%8B%A4%EC%B0%A8%EC%9B%90-%EB%B0%B0%EC%97%B4/">다차원 배열</category>
      
      
      <comments>https://depra3.github.io/2023/07/24/2023/07/JAVA-%EB%B0%B0%EC%97%B4-%E2%91%A1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>정보처리 산업기사(2023) 2과목-1장-①</title>
      <link>https://depra3.github.io/2023/07/22/2023/07/2%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A0/</link>
      <guid>https://depra3.github.io/2023/07/22/2023/07/2%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A0/</guid>
      <pubDate>Sat, 22 Jul 2023 11:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;프로그래밍-언어-활용&quot;&gt;&lt;a href=&quot;#프로그래밍-언어-활용&quot; class=&quot;headerlink&quot; title=&quot;프로그래밍 언어 활용&quot;&gt;&lt;/a&gt;프로그래밍 언어 활용&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;변수, 연산자 scanf, printf, if, f</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="프로그래밍-언어-활용"><a href="#프로그래밍-언어-활용" class="headerlink" title="프로그래밍 언어 활용"></a>프로그래밍 언어 활용</h1><ul><li>변수, 연산자 scanf, printf, if, for, while, do~while, 배열, 슬라이스(slice)</li><li>정수 타입 - 소수점이 없음 &#x2F; 1, -1, 10, -100</li><li>부동 소수점 타입 - 소수점 이하가 있는 실수</li><li>문자 타입 - 한 문자를 저장할 때, (’ ’) 작은 따옴표 표시</li><li>문자열 타입 - (” ”) 큰 따옴표 표시</li><li>불린 타입 - 참, 거짓 판단 default는 False</li><li>배열 타입 - 같은 타입의 데이터의 집합, {} 중괄호 안에 ‘,’ 콤마로 구분하여 값을 나열</li></ul><h3 id="언어별-데이터-타입"><a href="#언어별-데이터-타입" class="headerlink" title="언어별 데이터 타입"></a>언어별 데이터 타입</h3><ul><li><p><strong>C &#x2F; C++</strong></p><p>  <img src="/Images/2023/07/2%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A0/Untitled.png"></p></li><li><p><strong>JAVA</strong></p><p>  <img src="/Images/2023/07/2%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A0/Untitled%201.png"></p></li><li><p><strong>Python</strong></p><p>  <img src="/Images/2023/07/2%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A0/Untitled%202.png"></p></li></ul><h3 id="변수명-작성-규칙"><a href="#변수명-작성-규칙" class="headerlink" title="변수명 작성 규칙"></a>변수명 작성 규칙</h3><ul><li><p>영문자, 숫자, _ (under bar)를 사용할 수 있음</p></li><li><p>첫 글자는 영문자나 _ (under bar), 숫자 안됨</p></li><li><p>글자 수에 제한 없음</p></li><li><p>대 소문자 구분함, 끝에는 반드시 세미콜론(;)</p></li><li><p>예약어를 변수명으로 사용 불가</p></li><li><p>데이터 타입을 명시하는 것을 헝가리안 표시법</p><p>  <img src="/Images/2023/07/2%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A0/Untitled%203.png"></p></li><li><p>산술 연산자 : +, -, *, &#x2F;, %, ++ (증감 연산자), – (감소 연산자)</p></li><li><p>관계 연산자 : &#x3D;&#x3D;, !&#x3D;&#x3D;, &gt;, &gt;&#x3D;, &lt;, &lt;&#x3D;</p></li><li><p>비트 연산자</p><ul><li>&amp; (AND), | (OR) , ^ (XOR), ~ (NOT&#x2F; 단항 연산자로서 모든 비트 반전)</li><li>&lt;&lt; ( 비트를 왼쪽 한 칸 이동 &#x2F; 2배 ), &gt;&gt; ( 비트를 오른쪽 한 칸 이동 &#x2F; 2 나누기의 몫 )</li></ul></li><li><p>논리 연산자 : ! (NOT), &amp;&amp; (AND), || (OR)</p></li><li><p>대입 연산자 : +&#x3D;, -&#x3D;, *&#x3D;, &#x2F;&#x3D;, %&#x3D;, &lt;&lt;&#x3D;, &gt;&gt;&#x3D;</p></li><li><p>조건 연산자 : 조건? 수식 1 : 수식 2</p><ul><li>참이면 수식 1, 거짓이면 수식 2</li></ul></li></ul><h1 id=""><a href="#" class="headerlink" title=""></a></h1><ul><li><strong>연산자 우선 순위 [ 단산시 관비 논조대 ]</strong><ul><li>단항 : !, ++, –, ~</li><li>산술 : *, &#x2F;, %, +, -</li><li>시프트 : &gt;&gt;, &lt;&lt;</li><li>관계 : &lt;, &lt;&#x3D;, &gt;&#x3D;, &gt;, &#x3D;&#x3D;, !&#x3D;</li><li>비트 : &amp;, ^, |</li><li>논리 : &amp;&amp;, ||</li><li>조건 : □ ? 1 : 2</li><li>대입 : &#x3D;, +&#x3D;, -&#x3D;, *&#x3D;, &#x2F;&#x3D;, %&#x3D;, &lt;&lt;&#x3D;, &gt;&gt;&#x3D;</li></ul></li></ul><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><ul><li>데이터 입출력<ul><li>키보드로 입력 받아 화면으로 출력할 때 사용하는 함수<ul><li>scanf(), getchar(), gets(), printf(), putchar(), puts()</li></ul></li><li>scanf() 함수 : 변수를 저장하는 함수<ul><li>scanf(서식 문자열, 변수의 주소)<ul><li>서식 문자열<ul><li>%d(10진수 정수), %o(8진수 정수), %x(16진수), %c(문자), %s(문자열), %f(소수점 포함 실수)</li></ul></li><li>변수의 주소<ul><li>&amp;를 붙인다.</li></ul></li><li>서식 문자열 앞에는 숫자를 적으면 자릿수가 확보</li></ul></li></ul></li><li>printf() 함수 : 주어진 값을 화면에 출력하는 함수, 숫자 없는 기본 자릿수 6개<ul><li>printf(서식 문자열, 변수)</li></ul></li><li>제어 문자<ul><li><p>NULL 문자 출력 : \0</p><p>  <img src="/Images/2023/07/2%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A0/Untitled%204.png"></p></li></ul></li></ul></li></ul><h1 id="-2"><a href="#-2" class="headerlink" title=""></a></h1><ul><li>JAVA 표준 출력<ul><li>System.out.print() ( f, ln, … )</li></ul></li></ul><h1 id="-3"><a href="#-3" class="headerlink" title=""></a></h1><ul><li>기타 표준 입출력 함수<ul><li>입력<ul><li>getchar() : 키보드로 한 문자를 입력 받아 변수에 저장</li><li>gets() : 문자열로 인식 저장</li></ul></li><li>출력<ul><li>putchar() : 한 문자를 화면에 출력</li><li>puts() : 문자열을 출력한 후 다음 줄로 이동</li></ul></li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/%EC%9E%90%EA%B2%A9%EC%A6%9D-%EC%B0%B8%EA%B3%A0-%EC%9E%90%EB%A3%8C/">자격증 참고 자료</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC-%EC%82%B0%EC%97%85%EA%B8%B0%EC%82%AC/">정보처리 산업기사</category>
      
      
      <comments>https://depra3.github.io/2023/07/22/2023/07/2%EA%B3%BC%EB%AA%A9-1%EC%9E%A5-%E2%91%A0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA - 반복문 - foreach 문</title>
      <link>https://depra3.github.io/2023/07/21/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-foreach%EB%AC%B8/</link>
      <guid>https://depra3.github.io/2023/07/21/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-foreach%EB%AC%B8/</guid>
      <pubDate>Fri, 21 Jul 2023 11:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;반복문&quot;&gt;&lt;a href=&quot;#반복문&quot; class=&quot;headerlink&quot; title=&quot;반복문&quot;&gt;&lt;/a&gt;반복문&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;프로그램 흐름에서 일정 횟수를 반복하고 싶은 구간에 사용하는 제어문&lt;/strong&gt;이다.&lt;/l</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="반복문"><a href="#반복문" class="headerlink" title="반복문"></a>반복문</h1><ul><li><strong>프로그램 흐름에서 일정 횟수를 반복하고 싶은 구간에 사용하는 제어문</strong>이다.</li><li><strong>종류 : while 문, do ~ while 문, for 문, foreach 문</strong></li></ul><h1 id="foreach-문"><a href="#foreach-문" class="headerlink" title="foreach 문"></a>foreach 문</h1><ul><li><strong>자바 1.5버전부터 foreach 기능 추가</strong></li><li><strong>초기값, 리스트 or 배열를 앞에 정의하여 사용하는 반복문</strong>이다.</li><li><strong>리스트 목록을 받아 리스트 목록 개수만큼 반복문 안의 실행문을 실행</strong>한다.</li></ul><h2 id="사용-형식"><a href="#사용-형식" class="headerlink" title="사용 형식"></a>사용 형식</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">데이터 타입[] 변수명 ① = &#123; ... &#125;;</span><br><span class="line"><span class="keyword">for</span> ( 데이터타입 변수명 ②: 변수명 ①) &#123;</span><br><span class="line">System.out.println(변수명 ②);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id=""><a href="#" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String[] a = &#123; <span class="string">&quot;일&quot;</span>, <span class="string">&quot;이&quot;</span>, <span class="string">&quot;삼&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (String str : a) &#123;</span><br><span class="line">System.out.println(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><ul><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-foreach%EB%AC%B8/Untitled.png"></p></li></ul>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/JAVA/">JAVA</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EA%B0%9C%EB%85%90/">개념</category>
      
      <category domain="https://Depra3.github.io/tags/%EB%B0%98%EB%B3%B5%EB%AC%B8/">반복문</category>
      
      <category domain="https://Depra3.github.io/tags/foreach%EB%AC%B8/">foreach문</category>
      
      
      <comments>https://depra3.github.io/2023/07/21/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-foreach%EB%AC%B8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA - 배열 - ① 1차원 배열</title>
      <link>https://depra3.github.io/2023/07/20/2023/07/JAVA-%EB%B0%B0%EC%97%B4-%E2%91%A0/</link>
      <guid>https://depra3.github.io/2023/07/20/2023/07/JAVA-%EB%B0%B0%EC%97%B4-%E2%91%A0/</guid>
      <pubDate>Thu, 20 Jul 2023 12:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;배열-정의&quot;&gt;&lt;a href=&quot;#배열-정의&quot; class=&quot;headerlink&quot; title=&quot;배열 정의&quot;&gt;&lt;/a&gt;배열 정의&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;동일한 데이터 타입의 여러 데이터를 하나의 묶음으로 다루는 것&lt;/strong&gt;이</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="배열-정의"><a href="#배열-정의" class="headerlink" title="배열 정의"></a>배열 정의</h1><ul><li><strong>동일한 데이터 타입의 여러 데이터를 하나의 묶음으로 다루는 것</strong>이다.</li></ul><h1 id="1-차원-배열"><a href="#1-차원-배열" class="headerlink" title="1 차원 배열"></a>1 차원 배열</h1><ul><li><strong>선형 구조로 이루어진 묶음</strong>이다.</li></ul><table><thead><tr><th>a[0]</th><th>a[1]</th><th>a[2]</th><th>…</th></tr></thead><tbody><tr><td>일</td><td>이</td><td>삼</td><td>…</td></tr></tbody></table><h1 id="배열-선언-형식"><a href="#배열-선언-형식" class="headerlink" title="배열 선언 형식"></a>배열 선언 형식</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ①</span></span><br><span class="line">데이터타입[] 변수명 = <span class="keyword">new</span> 데이터타입[길이];</span><br><span class="line">데이터타입 변수명[] = <span class="keyword">new</span> 데이터타입[길이];</span><br><span class="line"></span><br><span class="line"><span class="comment">// ②</span></span><br><span class="line">데이터타입[] 변수명;</span><br><span class="line">변수명 = <span class="keyword">new</span> 데이터타입[] &#123; 변수<span class="number">1</span>, 변수<span class="number">2</span>, ....&#125;;</span><br><span class="line">데이터타입 변수명[];</span><br><span class="line">변수명 = <span class="keyword">new</span> 데이터타입[] &#123; 변수<span class="number">1</span>, 변수<span class="number">2</span>, ....&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ③</span></span><br><span class="line">데이터타입[] 변수명 = &#123; 변수<span class="number">1</span>, 변수<span class="number">2</span>, ....&#125;;</span><br><span class="line">데이터타입 변수명[] = &#123; 변수<span class="number">1</span>, 변수<span class="number">2</span>, ....&#125;;</span><br></pre></td></tr></table></figure><h1 id=""><a href="#" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 방식 ①</span></span><br><span class="line"><span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">String aa[] = <span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 방식 ②</span></span><br><span class="line"><span class="type">int</span>[] b;</span><br><span class="line">b = <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;;</span><br><span class="line">String bb[];</span><br><span class="line">bb = <span class="keyword">new</span> <span class="title class_">String</span>[] &#123;<span class="string">&quot;일&quot;</span>, <span class="string">&quot;이&quot;</span>, <span class="string">&quot;삼&quot;</span>, <span class="string">&quot;사&quot;</span>, <span class="string">&quot;오&quot;</span>, <span class="string">&quot;육&quot;</span>, <span class="string">&quot;칠&quot;</span>, <span class="string">&quot;팔&quot;</span>, <span class="string">&quot;구&quot;</span>, <span class="string">&quot;십&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 방식 ③</span></span><br><span class="line"><span class="type">int</span>[] c = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;;</span><br><span class="line">String cc[] = &#123;<span class="string">&quot;일&quot;</span>, <span class="string">&quot;이&quot;</span>, <span class="string">&quot;삼&quot;</span>, <span class="string">&quot;사&quot;</span>, <span class="string">&quot;오&quot;</span>, <span class="string">&quot;육&quot;</span>, <span class="string">&quot;칠&quot;</span>, <span class="string">&quot;팔&quot;</span>, <span class="string">&quot;구&quot;</span>, <span class="string">&quot;십&quot;</span>&#125;;</span><br></pre></td></tr></table></figure></li></ul><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><ul><li><p><strong>출력</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 방식 ① Arrays 클래스 사용</span></span><br><span class="line">System.out.println(Arrays.toString(b));</span><br><span class="line">System.out.println(Arrays.toString(bb));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 방식 ② 반복문 for 문 사용</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; c.length; i++) &#123;</span><br><span class="line">System.out.println(c[i]);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;--&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 방식 ③ 반복문 foreach 문 사용</span></span><br><span class="line"><span class="keyword">for</span> (String arr : cc) &#123;</span><br><span class="line">System.out.println(arr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>방식 ③ 참고 : <a href="https://depra3.github.io/2023/07/21/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-foreach%EB%AC%B8/">foreach 문</a></li></ul></li></ul><h1 id="-2"><a href="#-2" class="headerlink" title=""></a></h1><ul><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EB%B0%B0%EC%97%B4-%E2%91%A0/Untitled.png"></p></li></ul><h1 id="주의할-점"><a href="#주의할-점" class="headerlink" title="주의할 점"></a>주의할 점</h1><h2 id="선언-시-주의할-점"><a href="#선언-시-주의할-점" class="headerlink" title="선언 시 주의할 점"></a>선언 시 주의할 점</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// error 발생 X</span></span><br><span class="line"><span class="type">int</span>[] c = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// error 발생 O</span></span><br><span class="line"><span class="type">int</span>[] d;</span><br><span class="line">d = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;;</span><br></pre></td></tr></table></figure><ul><li><p>배열 c에서는 Error가 발생하지 않는다. 그러나 <strong>배열 d와 같이 2 줄로 정의하면 컴파일 Error가 발생</strong>한다.</p><p>  <img src="/Images/2023/07/JAVA-%EB%B0%B0%EC%97%B4-%E2%91%A0/Untitled%201.png"></p></li></ul><h2 id="출력-시-주의할-점"><a href="#출력-시-주의할-점" class="headerlink" title="출력 시 주의할 점"></a>출력 시 주의할 점</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 배열 내용 출력</span></span><br><span class="line">System.out.println(Arrays.toString(b));</span><br><span class="line">System.out.println(Arrays.toString(bb));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 배열 주소 출력</span></span><br><span class="line">System.out.println(c);</span><br><span class="line">System.out.println(cc);</span><br></pre></td></tr></table></figure><ul><li><p><strong>Arrays 클래스, 반복문을 이용하지 않고 그대로 변수명을 이용하여 출력하면 배열의 주소가 출력</strong>이 된다.</p><p>  <img src="/Images/2023/07/JAVA-%EB%B0%B0%EC%97%B4-%E2%91%A0/Untitled%202.png"></p></li></ul>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/JAVA/">JAVA</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EA%B0%9C%EB%85%90/">개념</category>
      
      <category domain="https://Depra3.github.io/tags/%EB%B0%B0%EC%97%B4/">배열</category>
      
      <category domain="https://Depra3.github.io/tags/1%EC%B0%A8%EC%9B%90-%EB%B0%B0%EC%97%B4/">1차원 배열</category>
      
      
      <comments>https://depra3.github.io/2023/07/20/2023/07/JAVA-%EB%B0%B0%EC%97%B4-%E2%91%A0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA - 반복문 - for 문</title>
      <link>https://depra3.github.io/2023/07/18/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-for%EB%AC%B8/</link>
      <guid>https://depra3.github.io/2023/07/18/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-for%EB%AC%B8/</guid>
      <pubDate>Tue, 18 Jul 2023 12:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;반복문&quot;&gt;&lt;a href=&quot;#반복문&quot; class=&quot;headerlink&quot; title=&quot;반복문&quot;&gt;&lt;/a&gt;반복문&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;프로그램 흐름에서 일정 횟수를 반복하고 싶은 구간에 사용하는 제어문&lt;/strong&gt;이다.&lt;/l</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="반복문"><a href="#반복문" class="headerlink" title="반복문"></a>반복문</h1><ul><li><strong>프로그램 흐름에서 일정 횟수를 반복하고 싶은 구간에 사용하는 제어문</strong>이다.</li><li><strong>종류 : while 문, do ~ while 문, for 문, foreach 문</strong></li></ul><h1 id="for-문"><a href="#for-문" class="headerlink" title="for 문"></a>for 문</h1><ul><li><strong>초기값, 조건식, 증감식을 앞에 정의하여 한 눈에 보기 쉬운 형식의 반복문</strong>이다.</li><li><strong>초기값에서 증감식 ( ++ &#x2F; – 등 ) 에 따라 조건식이 참인 경우 반복문 안의 실행문을 실행</strong>한다.</li></ul><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="사용-형식"><a href="#사용-형식" class="headerlink" title="사용 형식"></a>사용 형식</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(초기값; 조건식; 증감식) &#123;</span><br><span class="line">실행문;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>앞선 반복문(while, do ~ while)과 같이 실행문이 한 줄인 경우, 블록 기호 { } 생략 가능</strong>하다.</li><li><strong>참고 : <a href="https://depra3.github.io/2023/07/17/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-do~while%EB%AC%B8/">depra3’s 반복문 - do~while문</a></strong></li></ul><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;i = &quot;</span> + i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="-2"><a href="#-2" class="headerlink" title=""></a></h1><ul><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-for%EB%AC%B8/Untitled.png"></p></li></ul><h1 id="중첩-for-문"><a href="#중첩-for-문" class="headerlink" title="중첩 for 문"></a>중첩 for 문</h1><ul><li><strong>for 문을 중첩해서 사용</strong>할 수 있다.</li></ul><h1 id="-3"><a href="#-3" class="headerlink" title=""></a></h1><h2 id="사용-형식-1"><a href="#사용-형식-1" class="headerlink" title="사용 형식"></a>사용 형식</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(초기값; 조건식; 증감식) &#123;</span><br><span class="line">실행문;</span><br><span class="line"><span class="keyword">for</span>(초기값; 조건식; 증감식) &#123;</span><br><span class="line">실행문;</span><br><span class="line">&#125;</span><br><span class="line">실행문;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>원하는 만큼 중첩해서 사용</strong>할 수 있다.</li></ul><h1 id="-4"><a href="#-4" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="-5"><a href="#-5" class="headerlink" title=""></a></h1><ul><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-for%EB%AC%B8/Untitled%201.png"></p><ul><li><p><strong>for (int j &#x3D; 0; j &lt; i; j++)</strong> 에서 <strong>j &lt; i</strong> 를 <strong>j &lt; 11 - i 로 변경하면 역으로 나열</strong>된다.</p><p>  <img src="/Images/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-for%EB%AC%B8/Untitled%202.png"></p></li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/JAVA/">JAVA</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EA%B0%9C%EB%85%90/">개념</category>
      
      <category domain="https://Depra3.github.io/tags/%EB%B0%98%EB%B3%B5%EB%AC%B8/">반복문</category>
      
      <category domain="https://Depra3.github.io/tags/For%EB%AC%B8/">For문</category>
      
      
      <comments>https://depra3.github.io/2023/07/18/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-for%EB%AC%B8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA - 반복문 - do ~ while 문</title>
      <link>https://depra3.github.io/2023/07/17/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-do~while%EB%AC%B8/</link>
      <guid>https://depra3.github.io/2023/07/17/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-do~while%EB%AC%B8/</guid>
      <pubDate>Mon, 17 Jul 2023 12:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;반복문&quot;&gt;&lt;a href=&quot;#반복문&quot; class=&quot;headerlink&quot; title=&quot;반복문&quot;&gt;&lt;/a&gt;반복문&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;프로그램 흐름에서 일정 횟수를 반복하고 싶은 구간에 사용하는 제어문&lt;/strong&gt;이다.&lt;/l</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="반복문"><a href="#반복문" class="headerlink" title="반복문"></a>반복문</h1><ul><li><strong>프로그램 흐름에서 일정 횟수를 반복하고 싶은 구간에 사용하는 제어문</strong>이다.</li><li><strong>종류 : while 문, do ~ while 문, for 문, foreach 문</strong></li></ul><h1 id="do-while-문"><a href="#do-while-문" class="headerlink" title="do ~ while 문"></a>do ~ while 문</h1><ul><li><strong>do ~ whilie 문은 { } 안의 실행문을 무조건 한번 실행한 후 조건식에서 참(true) &#x2F;</strong><br>  <strong>거짓(false)을 가려 참(true)인 경우 반복문을 실행하고 거짓(false)인 경우 반복문을 종료한다.</strong></li></ul><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="사용-형식-①"><a href="#사용-형식-①" class="headerlink" title="사용 형식 ①"></a>사용 형식 ①</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">실행문;</span><br><span class="line">&#125; <span class="keyword">while</span> (조건식)</span><br><span class="line"><span class="comment">// 조건식이 참인 경우 반복문 실행, 거짓인 경우 반복문 실행하지 않음.</span></span><br></pre></td></tr></table></figure><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a = &quot;</span> + a);</span><br><span class="line">a++;</span><br><span class="line">&#125; <span class="keyword">while</span> (a==<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;-----&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;b = &quot;</span> + b);</span><br><span class="line">b++;</span><br><span class="line">&#125; <span class="keyword">while</span> (b &lt; <span class="number">10</span>);</span><br></pre></td></tr></table></figure></li></ul><h1 id="-2"><a href="#-2" class="headerlink" title=""></a></h1><ul><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-do~while%EB%AC%B8/Untitled.png"></p></li></ul><h1 id="-3"><a href="#-3" class="headerlink" title=""></a></h1><h2 id="사용-형식-②"><a href="#사용-형식-②" class="headerlink" title="사용 형식 ②"></a>사용 형식 ②</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> </span><br><span class="line">실행문;</span><br><span class="line"><span class="keyword">while</span> (조건식)</span><br><span class="line"><span class="comment">// 조건식이 참인 경우 반복문 실행, 거짓인 경우 반복문 실행하지 않음.</span></span><br></pre></td></tr></table></figure><ul><li><strong>실행문이 한 줄인 경우, 블록 기호 { } 를 생략</strong>할 수 있다.</li><li><code>실제로 사용하는 것을 본 적 없다.</code></li></ul><h1 id="-4"><a href="#-4" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">System.out.println(<span class="string">&quot;a = &quot;</span> + a++);</span><br><span class="line"><span class="keyword">while</span> (a==<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;-----&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 한 줄로 사용할 수도 있다.</span></span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span> System.out.println(<span class="string">&quot;b = &quot;</span> + b++); <span class="keyword">while</span> (b &lt; <span class="number">10</span>);</span><br></pre></td></tr></table></figure></li></ul><h1 id="-5"><a href="#-5" class="headerlink" title=""></a></h1><ul><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-do~while%EB%AC%B8/Untitled%201.png"></p></li></ul>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/JAVA/">JAVA</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EA%B0%9C%EB%85%90/">개념</category>
      
      <category domain="https://Depra3.github.io/tags/%EB%B0%98%EB%B3%B5%EB%AC%B8/">반복문</category>
      
      <category domain="https://Depra3.github.io/tags/do-while%EB%AC%B8/">do~while문</category>
      
      
      <comments>https://depra3.github.io/2023/07/17/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-do~while%EB%AC%B8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA-반복문-while문</title>
      <link>https://depra3.github.io/2023/07/15/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-while%EB%AC%B8/</link>
      <guid>https://depra3.github.io/2023/07/15/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-while%EB%AC%B8/</guid>
      <pubDate>Sat, 15 Jul 2023 12:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;반복문&quot;&gt;&lt;a href=&quot;#반복문&quot; class=&quot;headerlink&quot; title=&quot;반복문&quot;&gt;&lt;/a&gt;반복문&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;프로그램 흐름에서 일정 횟수를 반복하고 싶은 구간에 사용하는 제어문&lt;/strong&gt;이다.&lt;/l</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="반복문"><a href="#반복문" class="headerlink" title="반복문"></a>반복문</h1><ul><li><strong>프로그램 흐름에서 일정 횟수를 반복하고 싶은 구간에 사용하는 제어문</strong>이다.</li><li><strong>종류 : while 문, do ~ while 문, for 문, foreach 문</strong></li></ul><h1 id="while-문"><a href="#while-문" class="headerlink" title="while 문"></a>while 문</h1><ul><li><strong>while 문은 조건식이 참(true) 인 경우에 동작하는 반복문</strong>이며, <strong>거짓(false)이라면 반복하지 않고 while 문에서 빠져나와 그 다음 코드를 실행</strong>한다.</li></ul><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="사용-형식-①"><a href="#사용-형식-①" class="headerlink" title="사용 형식 ①"></a>사용 형식 ①</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(조건식)&#123;</span><br><span class="line">실행문;</span><br><span class="line">실행문;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>실행문이 두 줄 이상인 경우, 블록 기호 { } 를 생략</strong>할 수 없다.</li></ul><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (a &lt;= <span class="number">10</span>) &#123; </span><br><span class="line">System.out.println(<span class="string">&quot;a = &quot;</span> + a);</span><br><span class="line">a++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="-2"><a href="#-2" class="headerlink" title=""></a></h1><ul><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-while%EB%AC%B8/Untitled.png"></p></li></ul><h2 id="사용-형식-②"><a href="#사용-형식-②" class="headerlink" title="사용 형식 ②"></a>사용 형식 ②</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(조건식)</span><br><span class="line">실행문;</span><br></pre></td></tr></table></figure><ul><li><strong>실행문이 한 줄인 경우, 블록 기호 { } 를 생략</strong>할 수 있다.</li><li><strong>실행문이 두 줄인 경우, 첫 줄만 반복</strong>한다.</li><li><code>사용 빈도가 매우 낮다.</code></li></ul><h1 id="-3"><a href="#-3" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (b &lt;= <span class="number">10</span>)</span><br><span class="line">System.out.println(<span class="string">&quot;b = &quot;</span> + b++);</span><br></pre></td></tr></table></figure></li></ul><h1 id="-4"><a href="#-4" class="headerlink" title=""></a></h1><ul><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-while%EB%AC%B8/Untitled%201.png"></p></li></ul>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/JAVA/">JAVA</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EA%B0%9C%EB%85%90/">개념</category>
      
      <category domain="https://Depra3.github.io/tags/%EB%B0%98%EB%B3%B5%EB%AC%B8/">반복문</category>
      
      <category domain="https://Depra3.github.io/tags/while%EB%AC%B8/">while문</category>
      
      
      <comments>https://depra3.github.io/2023/07/15/2023/07/JAVA-%EB%B0%98%EB%B3%B5%EB%AC%B8-while%EB%AC%B8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA-조건문-Switch~Case문</title>
      <link>https://depra3.github.io/2023/07/14/2023/07/JAVA-%EC%A1%B0%EA%B1%B4%EB%AC%B8-Switch~Case%EB%AC%B8/</link>
      <guid>https://depra3.github.io/2023/07/14/2023/07/JAVA-%EC%A1%B0%EA%B1%B4%EB%AC%B8-Switch~Case%EB%AC%B8/</guid>
      <pubDate>Fri, 14 Jul 2023 11:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;조건문&quot;&gt;&lt;a href=&quot;#조건문&quot; class=&quot;headerlink&quot; title=&quot;조건문&quot;&gt;&lt;/a&gt;조건문&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;프로그램 흐름에 원하는 기준을 조건으로 분기를 추가하여 흐름을 제어&lt;/strong&gt;할 때 이용</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="조건문"><a href="#조건문" class="headerlink" title="조건문"></a>조건문</h1><ul><li><strong>프로그램 흐름에 원하는 기준을 조건으로 분기를 추가하여 흐름을 제어</strong>할 때 이용한다.</li><li><strong>종류</strong> : <strong>if 문, if ~ else 문, if ~ else if ~ else 문, 중첩 if문, switch - case 문</strong></li></ul><h1 id="Switch-Case-문"><a href="#Switch-Case-문" class="headerlink" title="Switch ~ Case 문"></a>Switch ~ Case 문</h1><ul><li><code>IF 문</code>과 같은 조건문이지만 <strong>다양한 연산자들을 이용하여 조건식을 만들 수 있는 <code>IF 문</code>과 달리 특정 값일 때에 실행문을 실행</strong>한다.</li></ul><h2 id="사용-형식"><a href="#사용-형식" class="headerlink" title="사용 형식"></a>사용 형식</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(변수) &#123;</span><br><span class="line">  <span class="keyword">case</span> 값<span class="number">1</span>:</span><br><span class="line">    실행문;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> 값<span class="number">2</span>:</span><br><span class="line">    실행문;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">  실행문;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>Switch ~ Case 문</code>은 <strong>Switch 문 에 들어가는 변수를 Case 문 에서 조건을 만들어 특정 값을 지정</strong>하면 <strong>break 문 전까지 실행문을 실행</strong>한다.</li><li><strong>만약 모든 Case 문의 조건에 충족되지 않는다면 default의 실행문을 실행</strong>하게 된다.</li></ul><h1 id=""><a href="#" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">switch</span> (a) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>: </span><br><span class="line">System.out.println(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;1&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>: &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;2&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">System.out.println(<span class="string">&quot;default&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><ul><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EC%A1%B0%EA%B1%B4%EB%AC%B8-Switch~Case%EB%AC%B8/Untitled.png"></p><ul><li><strong>IF 문과 달리 Case 문에서 블록기호 { } 를 사용하지 않아도 두 줄이상 사용이 가능</strong>하다.</li><li><strong>참고</strong> : <a href="https://depra3.github.io/2023/07/12/2023/07/JAVA-%EC%A1%B0%EA%B1%B4%EB%AC%B8-IF%EB%AC%B8/">depra3’s JAVA-조건문-IF문</a></li></ul></li></ul><h2 id="※-주의-사항-※"><a href="#※-주의-사항-※" class="headerlink" title="※ 주의 사항 ※"></a><strong>※ 주의 사항 ※</strong></h2><ul><li><strong>Case 문 처리 이후 break 문으로 마무리</strong> 지어야 한다. 그렇지 않으면 <strong>break 문이 나올 때 까지 모든 Case문을 처리</strong>한다.</li><li><strong>만약 모든 Case 문에 break 문이 없다면, default 문의 실행문 까지 실행</strong>한다.</li></ul><h1 id="-2"><a href="#-2" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">switch</span> (a) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>: </span><br><span class="line">System.out.println(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;1&quot;</span>);</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>: &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">System.out.println(<span class="string">&quot;default&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="-3"><a href="#-3" class="headerlink" title=""></a></h1><ul><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EC%A1%B0%EA%B1%B4%EB%AC%B8-Switch~Case%EB%AC%B8/Untitled%201.png"></p></li></ul>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/JAVA/">JAVA</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EA%B0%9C%EB%85%90/">개념</category>
      
      <category domain="https://Depra3.github.io/tags/%EC%A1%B0%EA%B1%B4%EB%AC%B8/">조건문</category>
      
      <category domain="https://Depra3.github.io/tags/Switch-Case%EB%AC%B8/">Switch~Case문</category>
      
      
      <comments>https://depra3.github.io/2023/07/14/2023/07/JAVA-%EC%A1%B0%EA%B1%B4%EB%AC%B8-Switch~Case%EB%AC%B8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA-조건문-IF문</title>
      <link>https://depra3.github.io/2023/07/12/2023/07/JAVA-%EC%A1%B0%EA%B1%B4%EB%AC%B8-IF%EB%AC%B8/</link>
      <guid>https://depra3.github.io/2023/07/12/2023/07/JAVA-%EC%A1%B0%EA%B1%B4%EB%AC%B8-IF%EB%AC%B8/</guid>
      <pubDate>Wed, 12 Jul 2023 12:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;조건문&quot;&gt;&lt;a href=&quot;#조건문&quot; class=&quot;headerlink&quot; title=&quot;조건문&quot;&gt;&lt;/a&gt;조건문&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;프로그램 흐름에 원하는 기준을 조건으로 분기를 추가하여 흐름을 제어&lt;/strong&gt;할 때 이용</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="조건문"><a href="#조건문" class="headerlink" title="조건문"></a>조건문</h1><ul><li><strong>프로그램 흐름에 원하는 기준을 조건으로 분기를 추가하여 흐름을 제어</strong>할 때 이용한다.</li><li><strong>종류</strong> : <strong>if 문, if ~ else 문, if ~ else if ~ else 문, 중첩 if문, switch - case 문</strong></li></ul><h3 id="블럭"><a href="#블럭" class="headerlink" title="블럭 { }"></a>블럭 { }</h3><ul><li><strong>중괄호로 표현</strong>하며, <strong>여러 코드들을 하나로 묶어 블럭</strong>처럼 만들어 준다.</li></ul><hr><h1 id="IF-문"><a href="#IF-문" class="headerlink" title="IF 문"></a>IF 문</h1><ul><li>조건식이 <strong>참(true)인 경우</strong>, 실행문을 실행한다.</li><li>조건식이 <strong>거짓(false)인 경우</strong>, 실행문을 실행하지 않는다.</li></ul><h2 id="사용-형식-①"><a href="#사용-형식-①" class="headerlink" title="사용 형식 ①"></a><strong>사용 형식 ①</strong></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( 조건식 ) &#123;</span><br><span class="line"><span class="comment">// 조건식이 참인 경우 실행되는 코드</span></span><br><span class="line">실행문;</span><br><span class="line">실행문;</span><br><span class="line">실행문;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>실행문이 두 줄 이상인 경우, 블록 기호 { } 를 생략할 수 없다.</strong></li></ul><h1 id=""><a href="#" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a &gt; <span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a는 0이 아니다.&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;a는 0보다 크다.&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;a는 1이다.&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EC%A1%B0%EA%B1%B4%EB%AC%B8-IF%EB%AC%B8/Untitled.png"></p></li></ul><h2 id="사용-형식-②"><a href="#사용-형식-②" class="headerlink" title="사용 형식 ②"></a>사용 형식 ②</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 두가지 형식으로 사용 가능하다.</span></span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="keyword">if</span>( 조건식 )</span><br><span class="line">실행문;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="keyword">if</span>( 조건식 )실행문;</span><br></pre></td></tr></table></figure><ul><li><strong>실행문이 한 줄인 경우, 블록 기호 { } 를 생략</strong>할 수 있다.</li></ul><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(a &gt; <span class="number">0</span>) </span><br><span class="line">System.out.println(<span class="string">&quot;a=1&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(a &gt; <span class="number">0</span>) System.out.println(<span class="string">&quot;a=1&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EC%A1%B0%EA%B1%B4%EB%AC%B8-IF%EB%AC%B8/Untitled%201.png"></p></li></ul><hr><h1 id="IF-else-문"><a href="#IF-else-문" class="headerlink" title="IF ~ else 문"></a>IF ~ else 문</h1><ul><li>조건식에 대해 <strong>참(true)이 아닌 경우에 실행할 코드들을 추가할 때 이용</strong></li><li>조건식이 <strong>참(true)인 경우, else 앞의 { } 에서 실행문을 실행</strong>한다.</li><li>조건식이 <strong>거짓(false)인 경우, else 뒤의 { } 에서 실행문을 실행</strong>한다.</li></ul><h2 id="사용-형식-①-1"><a href="#사용-형식-①-1" class="headerlink" title="사용 형식 ①"></a>사용 형식 ①</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( 조건식 ) &#123;</span><br><span class="line"><span class="comment">// 조건식이 참인 경우 실행되는 코드</span></span><br><span class="line">실행문;</span><br><span class="line">실행문;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 조건식이 거짓인 경우 실행되는 코드</span></span><br><span class="line">실행문;</span><br><span class="line">실행문;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>실행문이 두 줄 이상인 경우, 블록 기호 { } 를 생략할 수 없다.</strong></li></ul><h1 id="-2"><a href="#-2" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (a &gt; <span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a는 0이 아니다.&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;a는 0보다 크다.&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;a는 1이다.&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a는 0보다 크지 않다.&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;a는 0일 수 있다.&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EC%A1%B0%EA%B1%B4%EB%AC%B8-IF%EB%AC%B8/Untitled%202.png"></p></li></ul><h2 id="사용-형식-②-1"><a href="#사용-형식-②-1" class="headerlink" title="사용 형식 ②"></a>사용 형식 ②</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( 조건식 ) 실행문;</span><br><span class="line"><span class="keyword">else</span>          실행문;</span><br></pre></td></tr></table></figure><ul><li><strong>실행문이 한 줄인 경우, 블록 기호 { } 를 생략</strong>할 수 있다.</li></ul><h1 id="-3"><a href="#-3" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a &gt; <span class="number">0</span>)System.out.println(<span class="string">&quot;a는 0보다 크다.&quot;</span>);</span><br><span class="line"><span class="keyword">else</span>System.out.println(<span class="string">&quot;a는 0보다 크지 않다.&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EC%A1%B0%EA%B1%B4%EB%AC%B8-IF%EB%AC%B8/Untitled%203.png"></p></li></ul><hr><h1 id="IF-else-if-else-문"><a href="#IF-else-if-else-문" class="headerlink" title="IF ~ else if ~ else 문"></a>IF ~ else if ~ else 문</h1><ul><li>앞서 이용했던 IF ~ else 문에서 <strong>조건식을 추가하여 조금 더 다양하게 분기를 나누고 싶을 때는 IF ~ else if ~ else 문을 이용</strong>한다.</li><li><strong>조건식 ① 에서 참인 경우 실행문 ① 실행, 거짓인 경우 조건식 ② 에서 참, 거짓을 구분</strong>한다.<br>  <strong>조건식 ② 에서</strong> <strong>참인 경우 실행문 ② 실행, 거짓인 경우 실행문 ③ 을 실행</strong>한다.</li></ul><h2 id="사용-형식-①-2"><a href="#사용-형식-①-2" class="headerlink" title="사용 형식 ①"></a>사용 형식 ①</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( 조건식 ① ) &#123;</span><br><span class="line"><span class="comment">// 조건식 ① 이 참인 경우 실행되는 코드</span></span><br><span class="line">실행문;</span><br><span class="line">실행문;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>( 조건식 ② )&#123;</span><br><span class="line"><span class="comment">// 조건식 ① 이 거짓, 조건식 ② 가 참인 경우 실행되는 코드</span></span><br><span class="line">실행문;</span><br><span class="line">실행문;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 조건식 ① 과 ② 가 참인 경우 실행되는 코드</span></span><br><span class="line">실행문;</span><br><span class="line">실행문;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>실행문이 두 줄 이상인 경우, 블록 기호 { } 를 생략할 수 없다.</strong></li></ul><h1 id="-4"><a href="#-4" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (a &gt; <span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a는 0보다 크다.&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;a는 0보다 크다.&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ( a == <span class="number">0</span> )&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a는 0이다.&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;a는 0이다.&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a는 0보다 작다.&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;a는 0보다 작다.&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EC%A1%B0%EA%B1%B4%EB%AC%B8-IF%EB%AC%B8/Untitled%204.png"></p></li></ul><h2 id="사용-형식-②-2"><a href="#사용-형식-②-2" class="headerlink" title="사용 형식 ②"></a>사용 형식 ②</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( 조건식 ① )  실행문①;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>( 조건식 ② )실행문②;</span><br><span class="line"><span class="keyword">else</span>          실행문③;</span><br></pre></td></tr></table></figure><ul><li><strong>실행문이 한 줄인 경우, 블록 기호 { } 를 생략</strong>할 수 있다.</li></ul><h1 id="-5"><a href="#-5" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (a &gt; <span class="number">0</span>)  System.out.println(<span class="string">&quot;a는 0보다 크다.&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a == <span class="number">0</span>)System.out.println(<span class="string">&quot;a는 0이다.&quot;</span>);</span><br><span class="line"><span class="keyword">else</span>      System.out.println(<span class="string">&quot;0는 0보다 작다.&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EC%A1%B0%EA%B1%B4%EB%AC%B8-IF%EB%AC%B8/Untitled%205.png"></p></li></ul><hr><h1 id="중첩-IF-문"><a href="#중첩-IF-문" class="headerlink" title="중첩 IF 문"></a>중첩 IF 문</h1><ul><li><strong>횟수 제한 없이 IF문을 중첩하여 사용</strong>할 수 있다.</li><li>사용하는 IF문들 안에서 분기를 나누고 싶을 때 사용한다.</li></ul><h2 id="사용-형식"><a href="#사용-형식" class="headerlink" title="사용 형식"></a>사용 형식</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( 조건식 ① ) &#123;</span><br><span class="line"><span class="comment">// 조건식 ① 이 참인 경우 실행되는 코드</span></span><br><span class="line">실행문;</span><br><span class="line"><span class="keyword">if</span> ( 조건식 ② ) &#123;</span><br><span class="line"><span class="comment">// 조건식 ② 이 참인 경우 실행되는 코드</span></span><br><span class="line">실행문;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ( 조건식 ③ ) &#123;</span><br><span class="line"><span class="comment">// 조건식 ② 이 거짓, 조건식 ③ 이 참인 경우 실행되는 코드</span></span><br><span class="line">실행문;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 조건식 ② 와 ③ 이 거짓인 경우 실행되는 코드</span></span><br><span class="line">실행문;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>( 조건식 ④ )&#123;</span><br><span class="line"><span class="comment">// 조건식 ① 이 거짓, 조건식 ④ 가 참인 경우 실행되는 코드</span></span><br><span class="line">실행문;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 조건식 ① 과 ④ 가 거짓인 경우 실행되는 코드</span></span><br><span class="line">실행문;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="-6"><a href="#-6" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (a &gt; <span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a는 0보다 크다.&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;a는 0보다 크다.&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (a == <span class="number">1</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a == 1&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (a == <span class="number">2</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a == 2&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a == ??&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ( a == <span class="number">0</span> )&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a는 0이다.&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;a는 0이다.&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a는 0보다 작다.&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;a는 0보다 작다.&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EC%A1%B0%EA%B1%B4%EB%AC%B8-IF%EB%AC%B8/Untitled%206.png"></p></li></ul>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/JAVA/">JAVA</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EA%B0%9C%EB%85%90/">개념</category>
      
      <category domain="https://Depra3.github.io/tags/%EC%A1%B0%EA%B1%B4%EB%AC%B8/">조건문</category>
      
      <category domain="https://Depra3.github.io/tags/IF%EB%AC%B8/">IF문</category>
      
      
      <comments>https://depra3.github.io/2023/07/12/2023/07/JAVA-%EC%A1%B0%EA%B1%B4%EB%AC%B8-IF%EB%AC%B8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA-연산자-④ 논리, 조건</title>
      <link>https://depra3.github.io/2023/07/11/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A3%20%EB%85%BC%EB%A6%AC,%20%EC%A1%B0%EA%B1%B4/</link>
      <guid>https://depra3.github.io/2023/07/11/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A3%20%EB%85%BC%EB%A6%AC,%20%EC%A1%B0%EA%B1%B4/</guid>
      <pubDate>Tue, 11 Jul 2023 12:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;논리-연산자&quot;&gt;&lt;a href=&quot;#논리-연산자&quot; class=&quot;headerlink&quot; title=&quot;논리 연산자&quot;&gt;&lt;/a&gt;논리 연산자&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;2개의 boolean 값의 관계를 비교하여 true, false를 판별한다.&lt;/p</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="논리-연산자"><a href="#논리-연산자" class="headerlink" title="논리 연산자"></a>논리 연산자</h1><ul><li><p>2개의 boolean 값의 관계를 비교하여 true, false를 판별한다.</p><ul><li>boolean : <a href="https://depra3.github.io/2023/06/28/2023/06/JAVA-%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%83%80%EC%9E%85/">데이터타입 - boolean(논리형)</a></li></ul><p>  <img src="/Images/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A3/Untitled.png"></p></li></ul><h2 id="연산식"><a href="#연산식" class="headerlink" title="연산식"></a>연산식</h2><p><img src="/Images/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A3/Untitled%201.png"></p><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="variable">a</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;true  &amp; true  = &quot;</span> + (a &amp; a));</span><br><span class="line">System.out.println(<span class="string">&quot;true  &amp; false = &quot;</span> + (a &amp; b));</span><br><span class="line">System.out.println(<span class="string">&quot;false &amp; true  = &quot;</span> + (b &amp; a));</span><br><span class="line">System.out.println(<span class="string">&quot;false &amp; false = &quot;</span> + (b &amp; b));</span><br><span class="line">System.out.println(<span class="string">&quot;------------------------&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;true  &amp;&amp; true  = &quot;</span> + (a &amp;&amp; a));</span><br><span class="line">System.out.println(<span class="string">&quot;true  &amp;&amp; false = &quot;</span> + (a &amp;&amp; b));</span><br><span class="line">System.out.println(<span class="string">&quot;false &amp;&amp; true  = &quot;</span> + (b &amp;&amp; a));</span><br><span class="line">System.out.println(<span class="string">&quot;false &amp;&amp; false = &quot;</span> + (b &amp;&amp; b));</span><br><span class="line">System.out.println(<span class="string">&quot;------------------------&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;true  | true  = &quot;</span> + (a | a));</span><br><span class="line">System.out.println(<span class="string">&quot;true  | false = &quot;</span> + (a | b));</span><br><span class="line">System.out.println(<span class="string">&quot;false | true  = &quot;</span> + (b | a));</span><br><span class="line">System.out.println(<span class="string">&quot;false | false = &quot;</span> + (b | b));</span><br><span class="line">System.out.println(<span class="string">&quot;------------------------&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;true  || true  = &quot;</span> + (a || a));</span><br><span class="line">System.out.println(<span class="string">&quot;true  || false = &quot;</span> + (a || b));</span><br><span class="line">System.out.println(<span class="string">&quot;false || true  = &quot;</span> + (b || a));</span><br><span class="line">System.out.println(<span class="string">&quot;false || false = &quot;</span> + (b || b));</span><br><span class="line">System.out.println(<span class="string">&quot;------------------------&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;true  ^ true  = &quot;</span> + (a ^ a));</span><br><span class="line">System.out.println(<span class="string">&quot;true  ^ false = &quot;</span> + (a ^ b));</span><br><span class="line">System.out.println(<span class="string">&quot;false ^ true  = &quot;</span> + (b ^ a));</span><br><span class="line">System.out.println(<span class="string">&quot;false ^ false = &quot;</span> + (b ^ b));</span><br><span class="line">System.out.println(<span class="string">&quot;------------------------&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;!true = &quot;</span> + !a);</span><br><span class="line">System.out.println(<span class="string">&quot;!false = &quot;</span> + !b);</span><br></pre></td></tr></table></figure></li></ul><h1 id=""><a href="#" class="headerlink" title=""></a></h1><ul><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A3/Untitled%202.png"></p></li></ul><hr><h1 id="조건-연산자"><a href="#조건-연산자" class="headerlink" title="조건 연산자"></a>조건 연산자</h1><ul><li><p><strong>조건식, true인 경우의 값, false인 경우의 값</strong>을 필요로 하여 <strong>총 3개의 피연산자가 있는 연산자</strong>다.</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">조건식 ? <span class="literal">true</span> : <span class="literal">false</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// a는 5라고 정의</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">b</span> <span class="operator">=</span> a % <span class="number">2</span> == <span class="number">0</span> ? <span class="string">&quot;짝수&quot;</span> : <span class="string">&quot;홀수&quot;</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;a는 &quot;</span> + b + <span class="string">&quot;다&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="variable">c</span> <span class="operator">=</span> a &gt; <span class="number">3</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;a는 3보다 크다. : &quot;</span> + c);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 조건식을 중첩으로 사용할 수도 있다.</span></span><br><span class="line"><span class="type">String</span> <span class="variable">d</span> <span class="operator">=</span> a % <span class="number">2</span> == <span class="number">0</span> ? <span class="string">&quot;짝수&quot;</span> : (a % <span class="number">2</span> == <span class="number">1</span> ? <span class="string">&quot;홀&quot;</span> : <span class="string">&quot;수&quot;</span>); </span><br><span class="line">System.out.println(d);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 조건식을 조건문인 IF문으로 변환하여 사용 가능하다.</span></span><br><span class="line"><span class="comment">// IF문에서 경우 조건식으로 바꾸어서 사용할 수 도 있다.</span></span><br><span class="line"><span class="type">boolean</span> e;</span><br><span class="line"><span class="keyword">if</span> (a&gt;<span class="number">3</span>) &#123;</span><br><span class="line">e = <span class="literal">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">e = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;a는 3보다 크다. : &quot;</span> + e);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 피연산자의 타입이 다른 경우 자동 타입 변환이 이루어진다.</span></span><br><span class="line"><span class="comment">// a가 5보다 큰 경우 1.0 / 아닌경우 0 이지만 변수 f에 0.0이 대입된다.</span></span><br><span class="line"><span class="type">double</span> <span class="variable">f</span> <span class="operator">=</span> a &gt; <span class="number">5</span> ? <span class="number">1.0</span> : <span class="number">0</span>;</span><br><span class="line">System.out.println(f);</span><br></pre></td></tr></table></figure></li></ul><h1 id="-2"><a href="#-2" class="headerlink" title=""></a></h1><ul><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A3/Untitled%203.png"></p></li></ul>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/JAVA/">JAVA</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EA%B0%9C%EB%85%90/">개념</category>
      
      <category domain="https://Depra3.github.io/tags/%EC%97%B0%EC%82%B0%EC%9E%90/">연산자</category>
      
      <category domain="https://Depra3.github.io/tags/%EB%85%BC%EB%A6%AC-%EC%97%B0%EC%82%B0%EC%9E%90/">논리 연산자</category>
      
      <category domain="https://Depra3.github.io/tags/%EC%A1%B0%EA%B1%B4-%EC%97%B0%EC%82%B0%EC%9E%90/">조건 연산자</category>
      
      
      <comments>https://depra3.github.io/2023/07/11/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A3%20%EB%85%BC%EB%A6%AC,%20%EC%A1%B0%EA%B1%B4/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA-연산자-③ 증감, 관계(비교)</title>
      <link>https://depra3.github.io/2023/07/10/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A2%20%EC%A6%9D%EA%B0%90,%20%EA%B4%80%EA%B3%84(%EB%B9%84%EA%B5%90)/</link>
      <guid>https://depra3.github.io/2023/07/10/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A2%20%EC%A6%9D%EA%B0%90,%20%EA%B4%80%EA%B3%84(%EB%B9%84%EA%B5%90)/</guid>
      <pubDate>Mon, 10 Jul 2023 12:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;증감-연산자&quot;&gt;&lt;a href=&quot;#증감-연산자&quot; class=&quot;headerlink&quot; title=&quot;증감 연산자&quot;&gt;&lt;/a&gt;증감 연산자&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;변수의 값을 1 증가 또는 감소시키는 연산자&lt;/strong&gt;&lt;/p&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="증감-연산자"><a href="#증감-연산자" class="headerlink" title="증감 연산자"></a>증감 연산자</h1><ul><li><p><strong>변수의 값을 1 증가 또는 감소시키는 연산자</strong></p><table><thead><tr><th>연산자 기호</th><th>설명</th></tr></thead><tbody><tr><td>++</td><td>1 증가</td></tr><tr><td>–</td><td>1 감소</td></tr></tbody></table></li><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;a = &quot;</span> + a);</span><br><span class="line"></span><br><span class="line"><span class="comment">// a = a + 1; 와 같음</span></span><br><span class="line">a++;</span><br><span class="line">System.out.println(<span class="string">&quot;a++ =&gt; &quot;</span> + a);</span><br><span class="line">++a;</span><br><span class="line">System.out.println(<span class="string">&quot;++a =&gt; &quot;</span> + a);</span><br><span class="line"></span><br><span class="line"><span class="comment">// a = a - 1; 와 같음</span></span><br><span class="line">a--;</span><br><span class="line">System.out.println(<span class="string">&quot;a-- =&gt; &quot;</span> + a);</span><br><span class="line">--a;</span><br><span class="line">System.out.println(<span class="string">&quot;--a =&gt; &quot;</span> + a);</span><br></pre></td></tr></table></figure></li><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A2/Untitled.png"></p></li></ul><h1 id=""><a href="#" class="headerlink" title=""></a></h1><ul><li><strong>주의</strong> : 증감 연산자 <strong>위치에 따른 차이</strong>가 있어서 <strong>순서가 중요가 중요</strong>하다.<ul><li><strong>++a&#x2F;—a</strong> 인 경우 <strong>증감하여 계산 후, 다른 연산자와 계산</strong></li><li><strong>a++&#x2F;a—</strong> 인 경우 <strong>다른 연산자와 계산 후, 증감하여 계산</strong></li></ul><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 증감 먼저 계산 후 다른 연산자와 계산</span></span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">9</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> ++b * <span class="number">10</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;b = &quot;</span> + b);</span><br><span class="line">System.out.println(<span class="string">&quot;++b * 10 = &quot;</span> + c);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 다른 연산자와 계산 후 다른 연산자와 계산</span></span><br><span class="line"><span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">9</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">e</span> <span class="operator">=</span> d++ * <span class="number">10</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;d = &quot;</span> + d);</span><br><span class="line">System.out.println(<span class="string">&quot;d++ * 10 = &quot;</span> + e);</span><br></pre></td></tr></table></figure></li><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A2/Untitled%201.png"></p></li></ul></li></ul><hr><h1 id="관계-비교-연산자"><a href="#관계-비교-연산자" class="headerlink" title="관계(비교) 연산자"></a>관계(비교) 연산자</h1><ul><li><strong>2개의 값의 관계를 비교하여 true, false를 판별한다.</strong></li></ul><h2 id="크기-비교"><a href="#크기-비교" class="headerlink" title="크기 비교"></a><strong>크기 비교</strong></h2><table><thead><tr><th>연산자 기호</th><th>설명</th></tr></thead><tbody><tr><td>&gt;</td><td>좌측 값이 우측 값보다 크면 true, 아니면 false</td></tr><tr><td>&gt;&#x3D;</td><td>좌측 값이 우측 값보다 크거나 같으면 true, 아니면 false</td></tr><tr><td>&lt;</td><td>좌측 값이 우측 값보다 작으면 true, 아니면 false</td></tr><tr><td>&lt;&#x3D;</td><td>좌측 값이 우측 값보다 작거나 같으면 true, 아니면 false</td></tr></tbody></table><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;3 &gt; 2 = &quot;</span> + (<span class="number">3</span>&gt;<span class="number">2</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;3 &gt; 3 = &quot;</span> + (<span class="number">3</span>&gt;<span class="number">3</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;2 &gt; 3 = &quot;</span> + (<span class="number">2</span>&gt;<span class="number">3</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;-------------&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;3 &gt;= 2 = &quot;</span> + (<span class="number">3</span>&gt;=<span class="number">2</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;2 &gt;= 2 = &quot;</span> + (<span class="number">2</span>&gt;=<span class="number">2</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;1 &gt;= 2 = &quot;</span> + (<span class="number">1</span>&gt;=<span class="number">2</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;-------------&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;3 &lt; 2 = &quot;</span> + (<span class="number">3</span>&lt;<span class="number">2</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;3 &lt; 3 = &quot;</span> + (<span class="number">3</span>&lt;<span class="number">3</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;2 &lt; 3 = &quot;</span> + (<span class="number">2</span>&lt;<span class="number">3</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;-------------&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;3 &lt;= 2 = &quot;</span> + (<span class="number">3</span>&lt;=<span class="number">2</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;2 &lt;= 2 = &quot;</span> + (<span class="number">2</span>&lt;=<span class="number">2</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;1 &lt;= 2 = &quot;</span> + (<span class="number">1</span>&lt;=<span class="number">2</span>));</span><br></pre></td></tr></table></figure></li><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A2/Untitled%202.png"></p></li></ul><h2 id="동등-비교"><a href="#동등-비교" class="headerlink" title="동등 비교"></a><strong>동등 비교</strong></h2><table><thead><tr><th>연산자 기호</th><th>설명</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;</td><td>좌측 값과 우측 값이 같으면 true, 아니면 false</td></tr><tr><td>!&#x3D;</td><td>좌측 값과 우측 값이 다르면 true, 아니면 false</td></tr></tbody></table><ul><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;1 == 1 = &quot;</span> + (<span class="number">1</span>==<span class="number">1</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;1 == 2 = &quot;</span> + (<span class="number">1</span>==<span class="number">2</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;-------------&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;1 != 1 = &quot;</span> + (<span class="number">1</span>!=<span class="number">1</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;1 != 2 = &quot;</span> + (<span class="number">1</span>!=<span class="number">2</span>));</span><br></pre></td></tr></table></figure></li><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A2/Untitled%203.png"></p></li></ul><h3 id="주의-사항"><a href="#주의-사항" class="headerlink" title="주의 사항"></a>주의 사항</h3><ul><li><p>문자 비교시 <strong>아스키 코드에 기반하여 비교</strong>를 한다.</p><ul><li>참고 : <a href="https://ko.wikipedia.org/wiki/ASCII">아스키 코드(ASCII)</a></li></ul><h1 id="-2"><a href="#-2" class="headerlink" title=""></a></h1></li><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> <span class="variable">a</span> <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="type">char</span> <span class="variable">b</span> <span class="operator">=</span> <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line"><span class="comment">// A &gt; B 일 때, false 출력</span></span><br><span class="line">System.out.println(<span class="string">&quot;A &gt; B = &quot;</span> + (a&gt;b));</span><br><span class="line"><span class="comment">// 간단하게 A와 B의 차이 출력 =&gt; -1이 출력되어 1의 차이인 것을 확인 할 수 있다</span></span><br><span class="line">System.out.println(a-b);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 정수형으로 형변환 하여 출력 =&gt; A = 65, B = 66인 것을 알 수 있다.</span></span><br><span class="line"><span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> (<span class="type">int</span>)a;</span><br><span class="line"><span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> (<span class="type">int</span>)b;</span><br><span class="line">System.out.println(<span class="string">&quot;A = &quot;</span> + c);</span><br><span class="line">System.out.println(<span class="string">&quot;B = &quot;</span> + d);</span><br></pre></td></tr></table></figure></li><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A2/Untitled%204.png"></p></li></ul>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/JAVA/">JAVA</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EA%B0%9C%EB%85%90/">개념</category>
      
      <category domain="https://Depra3.github.io/tags/%EC%97%B0%EC%82%B0%EC%9E%90/">연산자</category>
      
      <category domain="https://Depra3.github.io/tags/%EC%A6%9D%EA%B0%90-%EC%97%B0%EC%82%B0%EC%9E%90/">증감 연산자</category>
      
      <category domain="https://Depra3.github.io/tags/%EA%B4%80%EA%B3%84-%EB%B9%84%EA%B5%90-%EC%97%B0%EC%82%B0%EC%9E%90/">관계(비교) 연산자</category>
      
      
      <comments>https://depra3.github.io/2023/07/10/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A2%20%EC%A6%9D%EA%B0%90,%20%EA%B4%80%EA%B3%84(%EB%B9%84%EA%B5%90)/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>정보처리 산업기사(2023) 1과목-3장-②</title>
      <link>https://depra3.github.io/2023/07/08/2023/07/1%EA%B3%BC%EB%AA%A9-3%EC%9E%A5-%E2%91%A1/</link>
      <guid>https://depra3.github.io/2023/07/08/2023/07/1%EA%B3%BC%EB%AA%A9-3%EC%9E%A5-%E2%91%A1/</guid>
      <pubDate>Sat, 08 Jul 2023 13:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;정보-시스템-기반-기술&quot;&gt;&lt;a href=&quot;#정보-시스템-기반-기술&quot; class=&quot;headerlink&quot; title=&quot;정보 시스템 기반 기술&quot;&gt;&lt;/a&gt;정보 시스템 기반 기술&lt;/h1&gt;&lt;h2 id=&quot;3장-테스트-및-배포&quot;&gt;&lt;a href=&quot;#3장</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="정보-시스템-기반-기술"><a href="#정보-시스템-기반-기술" class="headerlink" title="정보 시스템 기반 기술"></a>정보 시스템 기반 기술</h1><h2 id="3장-테스트-및-배포"><a href="#3장-테스트-및-배포" class="headerlink" title="3장 테스트 및 배포"></a>3장 테스트 및 배포</h2><ul><li>화이트 박스 테스트, 블랙박스 테스트, 단위 테스트, 통합 테스트, 하향식 통합 테스트, 상향식 통합 테스트, 결함, 사용자 인터페이스 (UI), 형상 관리, Git</li></ul><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h3 id="사용자-인터페이스-UI"><a href="#사용자-인터페이스-UI" class="headerlink" title="사용자 인터페이스 (UI)"></a>사용자 인터페이스 (UI)</h3><ul><li>UI는 사용자와 시스템 간의 상호작용이 원활하게 이뤄지도록 도와주는 장치나 소프트웨어를 의미</li></ul><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><ul><li><strong>UI의 특징</strong><ul><li>만족도에 가장 큰 영향을 미치며 변경이 가장 많이 발생</li><li>사용자의 가독성을 높임으로써 작업 시간 단축</li><li>최소한의 노력으로 원하는 결과 나올 수 있도록 한다.</li><li>오류를 줄이고 구체적인 방법 제공</li><li>사용자가 인터페이스를 설계하기 위해서는 소프트웨어 아키텍처를 반드시 숙지</li></ul></li></ul><h1 id="-2"><a href="#-2" class="headerlink" title=""></a></h1><ul><li><strong>사용자 인터페이스의 구분</strong><ul><li><strong>CLI</strong> (Command Line Interface)<ul><li>명령과 출력 테스트 형태로 이뤄지는 인터페이스</li></ul></li><li><strong>GUI</strong> (Graphic User Interface)<ul><li>아이콘이나 메뉴를 마우스로 선택하여 작업 수행하는 그래픽 환경</li></ul></li><li><strong>NUI</strong> (Natural User Interface)<ul><li>사용자의 말이나 행동으로 기기를 조작하는 인터페이스</li></ul></li></ul></li></ul><h1 id="-3"><a href="#-3" class="headerlink" title=""></a></h1><ul><li><strong>사용자 인터페이스의 기본 원칙 [ 직학효연 ]</strong><ul><li>직관성 : 누구나 쉽게 이해</li><li>학습성 : 누구나 쉽게 배우고 익힘</li><li>유효성 : 사용자의 목적을 정확하고 완벽하게 달성</li><li>유연성 : 사용자의 요구 사항을 최대한 수용, 실수 최소화</li></ul></li></ul><h1 id="-4"><a href="#-4" class="headerlink" title=""></a></h1><ul><li><strong>사용자 인터페이스의 설계 지침 [ 사일명가 단오 접결표 ]</strong><ul><li><code>사용자 중심</code>, <code>일관성</code>, <code>명확성</code>, <code>가시성</code>, <code>단순성</code>, <code>오류 발생 해결</code>, <code>접근성</code>, <code>결과 예측 가능성</code>, <code>표준화</code></li></ul></li></ul><h1 id="-5"><a href="#-5" class="headerlink" title=""></a></h1><ul><li><strong>사용자 인터페이스 개발 시스템의 기능</strong><ul><li>사용자의 입력을 검증할 수 있어야함</li><li>에러 처리와 그와 관련된 에러 메세지를 표시할 수 있어야함.</li><li>도움과 프롬프트(prompt)를 제공해야함.</li></ul></li></ul><hr><h3 id="소프트웨어-패키징의-형상-관리-SCM"><a href="#소프트웨어-패키징의-형상-관리-SCM" class="headerlink" title="소프트웨어 패키징의 형상 관리 (SCM)"></a>소프트웨어 패키징의 형상 관리 (SCM)</h3><ul><li>형상관리 (SCM)는 소프트웨어의 개발 과정에서 소프트웨어의 변경 사항을 관리하기 위해 개발된 일련의 활동</li><li>소프트웨어 변경의 원인을 알아내고 제어, 담당자에게 확인하여 통보</li><li>소프트웨어 개발 전단계에 적영되는 활동, 유지보수 단계에서도 수행</li><li>전체 개발 비용을 줄이고, 개발 과정의 여러 방해 요인 최소화 되도록 보증</li><li>프로젝트 계획, 분석서, 설계서, 프로그램 테스트 케이스 포함</li></ul><h1 id="-6"><a href="#-6" class="headerlink" title=""></a></h1><ul><li><strong>형상관리 (SCM)의 중요성</strong><ul><li>지속적인 소프트웨어의 변경 사항을 체계적으로 추적, 통제</li><li>무절제 변경 방지, 버그나 수정 사항을 추적</li><li>가시성이 결핍되므로 진행 정도를 확인하기 위한 기준</li><li>배포본을 효율적으로 관리</li><li>여러 명의 개발자가 동시에 개발 가능</li></ul></li></ul><h1 id="-7"><a href="#-7" class="headerlink" title=""></a></h1><ul><li><strong>형상 관리 기능</strong><ul><li>형상 식별<ul><li>이름과 관리 번호 부여, 계층(Tree) 구조로 구분하여 수정 및 추적 용이</li></ul></li><li>버전 제어<ul><li>특정 절차와 도구(Tool)를 결합</li></ul></li><li>형상 통제 (변경 관리)<ul><li>변경 요구 검토 기준선(Base Line)이 잘 반영되도록 조정</li></ul></li><li>형상 감사<ul><li>무결성 평가를 위해 확인, 검증, 검열 과정을 통해 공식적으로 승인</li></ul></li><li>형상 기록 (상태 보고)<ul><li>형상의 식별, 통제, 감사 작업의 결과를 기록 관리하고 보고서 작성</li></ul></li></ul></li></ul><h1 id="-8"><a href="#-8" class="headerlink" title=""></a></h1><ul><li><strong>소프트웨어의 버전 등록 관련 주요 기능</strong><ul><li>체크 아웃(check-out)<ul><li>프로그램을 수정하기 위해 저장소에서 파일을 받아옴</li><li>소스 파일과 함께 버전 관리를 위한 파일 받아옴</li></ul></li><li>체크 인(check-in)<ul><li>새로운 버전으로 갱신</li></ul></li><li>커밋 (commit)<ul><li>충돌을 알리고 diff도구를 이용해 수정한 후 갱신을 완료</li></ul></li></ul></li></ul><h1 id="-9"><a href="#-9" class="headerlink" title=""></a></h1><ul><li><strong>소프트웨어 버전 관리 도구</strong><ul><li>분산 저장소 방식<ul><li>개발자 별로 원격 저장소의 자료를 자신의 로컬 저장소로 복사하여 작업한 후 변경된 내용을 로컬 저장소에서 우선 반영(버전관리)한 다음 이를 원격 저장소에 반영한다.</li><li>종류에는 Git, GNU arch, DCVS, Bazaar, Mercurial, Team Ware, Bitkeeper, Plastic SCM</li></ul></li><li>Git(깃)<ul><li>분산 버전 관리 시스템으로 2개의 저장소, 지역(로컬) 저장소와 원격 저장소가 존재</li><li>지역 저장소는 개발자들이 실제 개발하는 장소로 버전관리 수행</li><li>원격 저장소는 여러 사람들의 협업을 위해 버전을 공동 관리하는 곳</li><li>원격 저장소나 네트워크에 문제가 있어도 작업 가능</li><li>파일의 변화를 스냅샷으로 저장, 스냅샷은 이전 스냅샷의 포인터를 가지므로 버전의 흐름을 파악함</li><li>Add 스테이징 영역 추가</li><li>Commit 지역 저장소에 저장</li><li>Branch 브랜치 생성</li><li>Checkout 지정한 브랜치로 이동</li></ul></li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/%EC%9E%90%EA%B2%A9%EC%A6%9D-%EC%B0%B8%EA%B3%A0-%EC%9E%90%EB%A3%8C/">자격증 참고 자료</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC-%EC%82%B0%EC%97%85%EA%B8%B0%EC%82%AC/">정보처리 산업기사</category>
      
      
      <comments>https://depra3.github.io/2023/07/08/2023/07/1%EA%B3%BC%EB%AA%A9-3%EC%9E%A5-%E2%91%A1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>정보처리 산업기사(2023) 1과목-3장-①</title>
      <link>https://depra3.github.io/2023/07/07/2023/07/1%EA%B3%BC%EB%AA%A9-3%EC%9E%A5-%E2%91%A0/</link>
      <guid>https://depra3.github.io/2023/07/07/2023/07/1%EA%B3%BC%EB%AA%A9-3%EC%9E%A5-%E2%91%A0/</guid>
      <pubDate>Fri, 07 Jul 2023 12:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;정보-시스템-기반-기술&quot;&gt;&lt;a href=&quot;#정보-시스템-기반-기술&quot; class=&quot;headerlink&quot; title=&quot;정보 시스템 기반 기술&quot;&gt;&lt;/a&gt;정보 시스템 기반 기술&lt;/h1&gt;&lt;h2 id=&quot;3장-테스트-및-배포&quot;&gt;&lt;a href=&quot;#3장</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="정보-시스템-기반-기술"><a href="#정보-시스템-기반-기술" class="headerlink" title="정보 시스템 기반 기술"></a>정보 시스템 기반 기술</h1><h2 id="3장-테스트-및-배포"><a href="#3장-테스트-및-배포" class="headerlink" title="3장 테스트 및 배포"></a>3장 테스트 및 배포</h2><ul><li><p>화이트 박스 테스트, 블랙박스 테스트, 단위 테스트, 통합 테스트, 하향식 통합 테스트, 상향식 통합 테스트, 결함, 사용자 인터페이스 (UI), 형상 관리, Git</p></li><li><p><strong>화이트 박스 테스트</strong></p><ul><li>모듈의 원시 코드를 오픈 시킨 상태에서 원시 코드의 <code>논리적인 모든 경로</code>를 테스트하여 테스트 케이스를 설계하는 방식</li><li>절차에 초점을 맞춤, <code>테스트 과정의 초기</code>에 적용, 모든 모듈 안의 작동을 <code>직접 관찰</code></li><li>원시 코드(모듈)의 모든 문장을 한 번 이상 실행</li><li>선택, 반복 등 분기점 부분들을 수행함으로써 논리적 경로 제어</li></ul></li><li><p><strong>화이트 박스 테스트의 종류</strong></p><ul><li>기초 경로 검사 (Base Path Testing)<ul><li>대표적인 화이트 박스 테스트 기법, 논리적 복잡성 측정, 실행 경로의 기초를 정의하는 데 지침으로 사용</li></ul></li><li>제어 구조 검사 (Control Structure Testing)<ul><li>조건 검사 (Condition Testing) : 논리적 조건 테스트</li><li>루프 검사 (Loop Testing) : 프로그램 반복 구조에 초점을 맞춤</li><li>데이터 흐름 검사 (Data Flow Testing) : 변수의 정의와 변수 사용 위치에 초점을 맞춤</li></ul></li></ul></li><li><p><strong>블랙 박스 테스트</strong></p><ul><li>소프트웨어가 수행할 특정 기능을 알기 위해서 <code>완전히 작동되는 것을 입증</code>하는 테스트<ul><li>기능 테스트라고도 함</li></ul></li><li>사용자의 요구 명세를 보며 실시하는 테스트</li><li><code>사용자 인터페이스에서 실시</code></li><li>부정확 하거나 누락된 기능, 인터페이스 오류, 자료 구조나 외부 데이터베이스 접근에 따른 오류, 행위나 성능 오류, 초기화와 종료 오류 발견</li><li><code>테스트 과정의 후반부</code>에 적용</li></ul></li><li><p><strong>블랙 박스 테스트의 종류</strong></p><ul><li>동치 분할 검사 &#x3D; 동등 분할 기법 (Equivalence Partitioning Testing)<ul><li><code>입력 자료에 초점을 맞춰</code> 테스트 케이스를 만들고 검사하는 방법</li></ul></li><li>경계값 분석 (Boundary Value Analysis)<ul><li><code>동치 분할 기법을 보완하기 위한 기법</code></li><li>입력 조건의 중간값보다 경계값에서 오류가 발생될 확률이 높다는 점을 이용하여 <code>입력 조건의 경계값을 테스트 케이스로 선정</code>하여 검사하는 기법이다.</li></ul></li><li>원인 효과 그래프 검사 (Cause-Effect Graphing Testing)<ul><li>효용성이 높은 테스트 케이스를 선정하여 검사</li></ul></li><li>오류 예측 검사 &#x3D; 데이터 확인 검사 (Error Guessing)<ul><li>블랙 박스 테스트 기법으로 찾을 수 없는 오류를 찾아내는 보충적 검사 기법</li></ul></li><li>비교 검사 (Comparison Testing)<ul><li>여러 버전의 프로그램에 동일한 테스트 자료 제공, 동일한 결과가 출력되는지 테스트</li></ul></li></ul></li><li><p><strong>개발 단계에 따른 애플리케이션 테스트</strong></p><ul><li><p><strong>SW 생명 주기 [ 요 설 구 테 유 ] &#x2F; [ 요-분-설-구 ] &#x2F; 소프트웨어 개발 단계</strong></p><ul><li><strong>요구 사항 분석 → 설계 → 구현 → 테스트 → 유지 보수</strong></li></ul></li><li><p><strong>테스트 단계 [ 단 통 시 인 ]</strong></p><ul><li><p><strong>단위 테스트</strong></p><ul><li>코딩 직후 <code>소프트웨어 설계의 최소 단위인 모듈이나 컴포넌트에 초점을 맞춰 테스트</code></li><li>인터페이스, 외부적I&#x2F;O, 자료 구조, 독립적 기초 경로, 오류 처리 경로, 경계 조건 등을 검사</li><li>구조 기반 테스트<ul><li>프로그램 내부 구조 및 복잡도를 검증하는 화이트 박스 테스트 실행</li><li>목적 : 제어 흐름, 조건 결정</li></ul></li><li>명세 기반 테스트<ul><li>목적 및 실행 코드 기반의 블랙박스 테스트 실행</li><li>목적 : 동등 분할, 경계 값 분석</li></ul></li></ul></li><li><p><strong>통합 테스트 ( &#x3D; 결합 테스트)</strong></p><ul><li><p><code>단위 테스트가 완료된 모듈들을 결합하여 하나의 시스템으로 완성시키는 과정에서의 테스트</code></p></li><li><p>모듈 간 또는 통합된 컴포넌트 간의 상호 작용 <code>오류를 검사</code></p></li><li><p>점진적 모듈 통합 방법 : 하향식, 상향식</p><ul><li><p><strong>하향식 통합 테스트</strong> ( Top Down Intergration Test )</p><ul><li>상위 모듈에서 하위 모듈 방향으로 통합하면서 테스트 하는 기법</li><li>주요 제어 모듈의 종속 모듈들은 Stub으로 대체<ul><li>Stub : 함수 이름만 있거나 내용이 완전치 않은 코드</li></ul></li><li>깊이 우선 (하위 계층 우선) or 넓이 우선(같은 계층 우선) 등의 통합 방식에 따라 하위 모듈인 Stub들이 한번에 하나씩 실제 모듈로 교체</li><li>모듈이 통합될 때 마다 테스트</li><li>새로운 오류가 발생하지 않음을 보증하기 위해 회귀 테스트 실시</li></ul></li><li><p><strong>상향식 통합 테스트</strong> ( Bottom Up Intergration Test )</p><ul><li>하위 모듈에서 상위 모듈 방향으로 통합하면서 테스트 하는 기법</li><li>Cluster가 필요 &#x2F; Cluster : 하나의 주요 제어 모듈과 관련된 종속 모듈 그룹</li><li>하위 모듈들을 Cluster로 결합, 상위 모듈에서 Driver 작성<ul><li>Driver : 더미 모듈</li></ul></li><li>통합된 Cluster 단위로 테스트</li><li>테스트가 완료되면 Cluster프로그램 구조의 상위로 이동하여 결합하고 Driver는 실제 모듈로 대체</li></ul></li></ul></li><li><p>장점 : 위치 투명성, 연동 용이, 재사용 컴포넌트 확보 용이</p></li><li><p>단점 : 성능 불이익, 장애 대처 어려움, 디버깅 어려움</p></li></ul></li><li><p><strong>시스템 테스트</strong></p><ul><li>개발된 소프트웨어가 해당 컴퓨터 시스템에서 완벽하게 수행되는 가를 점검하는 테스트</li><li>환경적인 장애 리스크를 최소화하기 위해서는 실제 사용 환경과 유사하게 만든 테스트 환경에서 테스트를 수행</li><li>기능적 요구 사항과 비기능적 요구 사항으로 구분하여 각각을 만족하는지 테스트<ul><li>기능적 요구 사항<ul><li>요구 사항 명세서, 비즈니스 절차, 유스케이스 등 명세서 기반의 블랙박스 테스트 시행</li></ul></li><li>비기능적 요구 사항<ul><li>성능 테스트, 회복 테스트, 보안 테스트, 내부 시스템의 메뉴 구조, 웹페이지의 네비게이션 등 구조적 요소에 대한 화이트 박스 테스트 시행</li></ul></li></ul></li></ul></li><li><p><strong>인수 테스트</strong></p><ul><li>개발한 소프트웨어가 사용자의 요구 사항을 충족하는 지에 중점을 두고 테스트</li><li>개발한 소프트웨어를 사용자가 직접 테스트 함</li><li>문제가 없으면 사용자는 소프트웨어를 인수</li><li>인수 테스트 6 종류<ul><li><strong>사용자 인수 테스트</strong><ul><li>사용자가 시스템 사용의 적절성 여부 확인</li></ul></li><li><strong>운영 상의 인수 테스트</strong><ul><li>시스템 관리자가 백업 &#x2F; 복원 시스템, 재난 복구, 사용자 관리, 정기 점검 등을 확인</li></ul></li><li><strong>계약 인수 테스트</strong><ul><li>인수 &#x2F; 검수 조건을 준수하는 여부 확인</li></ul></li><li><strong>규정 인수 테스트</strong><ul><li>정부 지침, 법규, 규정에 맞게 개발 확인</li></ul></li><li><strong>알파 테스트</strong><ul><li>개발자의 장소에서 사용자가 개발자 앞에서 하는 테스트 기법</li><li>통제된 환경에서 행해지며, <code>오류와 문제점을 사용자와 개발자가 함께 확인하며 기록</code></li></ul></li><li><strong>베타 테스트 ( &#x3D; 필드 테스트)</strong><ul><li>선정된 사용자가 여러 명의 사용자 앞에서 하는 테스트 기법(필드 테스팅)</li><li>실제 업무를 가지고 사용자가 직접 테스트 하는 것</li><li>개발자에 의해 제어되지 않는 상태에서 테스트 실행</li><li>발견된 오류와 문제점을 기록하고 개발자에게 주기적으로 보고</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/%EC%9E%90%EA%B2%A9%EC%A6%9D-%EC%B0%B8%EA%B3%A0-%EC%9E%90%EB%A3%8C/">자격증 참고 자료</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC-%EC%82%B0%EC%97%85%EA%B8%B0%EC%82%AC/">정보처리 산업기사</category>
      
      
      <comments>https://depra3.github.io/2023/07/07/2023/07/1%EA%B3%BC%EB%AA%A9-3%EC%9E%A5-%E2%91%A0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA-연산자-② 산술, 부호, 문자열, 대입</title>
      <link>https://depra3.github.io/2023/07/05/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A1%20%EC%82%B0%EC%88%A0,%20%EB%B6%80%ED%98%B8,%20%EB%AC%B8%EC%9E%90%EC%97%B4,%20%EB%8C%80%EC%9E%85/</link>
      <guid>https://depra3.github.io/2023/07/05/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A1%20%EC%82%B0%EC%88%A0,%20%EB%B6%80%ED%98%B8,%20%EB%AC%B8%EC%9E%90%EC%97%B4,%20%EB%8C%80%EC%9E%85/</guid>
      <pubDate>Wed, 05 Jul 2023 12:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;산술-연산자&quot;&gt;&lt;a href=&quot;#산술-연산자&quot; class=&quot;headerlink&quot; title=&quot;산술 연산자&quot;&gt;&lt;/a&gt;산술 연산자&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;가장 기본이 되는 연산자로 **4칙 연산( +, -, *, &amp;#x2F;)**과 &lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="산술-연산자"><a href="#산술-연산자" class="headerlink" title="산술 연산자"></a>산술 연산자</h1><ul><li><p>가장 기본이 되는 연산자로 **4칙 연산( +, -, *, &#x2F;)**과 <strong>나머지 값</strong>을 구하는 **나머지 연산자(%)**가 있다.</p><table><thead><tr><th>연산자 기호</th><th>설명</th></tr></thead><tbody><tr><td>+</td><td>두 수에 대한 덧셈</td></tr><tr><td>-</td><td>두 수에 대한 뺄셈</td></tr><tr><td>*</td><td>두 수에 대한 곱셈</td></tr><tr><td>&#x2F;</td><td>두 수에 대한 나눗셈</td></tr><tr><td>%</td><td>두 수를 나눈 후 나머지를 반환</td></tr></tbody></table></li><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;a + 5 = &quot;</span> + (a + <span class="number">5</span>));</span><br><span class="line"><span class="comment">// 10 + 5 =&gt; 15</span></span><br><span class="line">System.out.println(<span class="string">&quot;a - 5 = &quot;</span> + (a - <span class="number">5</span>));</span><br><span class="line"><span class="comment">// 10 - 5 =&gt; 5</span></span><br><span class="line">System.out.println(<span class="string">&quot;a * 5 = &quot;</span> + (a * <span class="number">5</span>));</span><br><span class="line"><span class="comment">// 10 * 5 =&gt; 50</span></span><br><span class="line">System.out.println(<span class="string">&quot;a / 5 = &quot;</span> + (a / <span class="number">5</span>));</span><br><span class="line"><span class="comment">// 10 / 5 =&gt; 2</span></span><br><span class="line">System.out.println(<span class="string">&quot;a % 5 = &quot;</span> + (a % <span class="number">5</span>));</span><br><span class="line"><span class="comment">// 10 % 5 =&gt; 나머지는 0</span></span><br></pre></td></tr></table></figure></li><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A1/Untitled.png"></p></li></ul><hr><h1 id="부호-연산자"><a href="#부호-연산자" class="headerlink" title="부호 연산자"></a>부호 연산자</h1><ul><li><p><strong>단항</strong> 연산자로 양수&#x2F;음수를 표현하고 값의 부호를 결정</p><table><thead><tr><th>연산자 기호</th><th>설명</th></tr></thead><tbody><tr><td>+</td><td>변수에 +1을 곱함</td></tr><tr><td>-</td><td>변수에 -1을 곱함</td></tr></tbody></table></li><li><p><strong>예시</strong></p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;+a = &quot;</span> + (+a));</span><br><span class="line"><span class="comment">// a 변수값 그대로 출력</span></span><br><span class="line">System.out.println(<span class="string">&quot;-a = &quot;</span> + (-a));</span><br><span class="line"><span class="comment">// a 변수값을 음수로 변환하여 출력</span></span><br><span class="line">System.out.println(<span class="string">&quot;----------&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> -a;    <span class="comment">// 의도 : a 변수값을 음수로 변환하여 대입</span></span><br><span class="line">System.out.println(<span class="string">&quot;b = &quot;</span> + b);</span><br><span class="line"><span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> +b;    <span class="comment">// 의도 : b 변수값을 양수로 변환하여 대입</span></span><br><span class="line">System.out.println(<span class="string">&quot;c = &quot;</span> + c);</span><br><span class="line"><span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> -b;    <span class="comment">// 의도 : b 변수값을 음수로 변환하여 대입</span></span><br><span class="line">System.out.println(<span class="string">&quot;d = &quot;</span> + d);</span><br></pre></td></tr></table></figure></li><li><p><strong>결과</strong></p><p>  <img src="/Images/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A1/Untitled%201.png"></p><ul><li>+a와 -a는 의도대로 출력이 된다.</li><li>그러나 변환하여 대입할 때 변수 b와 달리 변수 c와 변수 d는 생각과 다르게 표시되는 것을 볼 수 있다.<ul><li>풀어서 쓰면 <strong>c &#x3D; +(-10) ⇒ c &#x3D; -10</strong> &#x2F;&#x2F; <strong>d &#x3D; -(-10) ⇒ d &#x3D; 10</strong> 와 같이 볼 수 있다.</li></ul></li><li><strong>결론</strong><ul><li>부호 연산자는 단순하게 <strong>+, -로 변환하는 것이 아닌 +1, -1를 곱하여 부호를 변환하는 것</strong>이라고 볼 수 있다.</li></ul></li></ul></li></ul><hr><h1 id="문자열-연산자"><a href="#문자열-연산자" class="headerlink" title="문자열 연산자"></a>문자열 연산자</h1><ul><li><p><strong>이항</strong> 연산자이며 <strong>두 개의 피연산자 중 하나가 문자열인 경우 문자열로 결합</strong>한다.</p></li><li><p>예시</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="number">1</span> + <span class="number">1</span>);     <span class="comment">// 숫자 1 + 숫자 1 = 2</span></span><br><span class="line">System.out.println(<span class="string">&quot;1&quot;</span> + <span class="number">1</span>);   <span class="comment">// 문자열 &quot;1&quot; + 숫자 1 = &quot;1&quot;1</span></span><br><span class="line">System.out.println(<span class="string">&quot;1&quot;</span> + <span class="string">&quot;2&quot;</span>); <span class="comment">// 문자열 &quot;1&quot; + 문자열 &quot;2&quot; = &quot;1&quot;&quot;2&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>결과</p><p>  <img src="/Images/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A1/Untitled%202.png"></p><ul><li>1+1의 연산은 문자열이 없어 산술 계산</li><li>한 쪽이 문자열이 있는 경우 다른 쪽의 피연산자가 정수여도 문자열로 결합</li></ul></li></ul><hr><h1 id="대입-연산자"><a href="#대입-연산자" class="headerlink" title="대입 연산자"></a>대입 연산자</h1><ul><li><p><strong>오른쪽에 있는 값을 왼쪽 변수에 대입</strong>한다.</p><table><thead><tr><th>연산자 기호</th><th>설명</th></tr></thead><tbody><tr><td>&#x3D;</td><td>오른쪽 값을 왼쪽 변수에 대입</td></tr><tr><td>+&#x3D;</td><td>왼쪽 변수의 값을 오른쪽 변수로 덧셈 후 왼쪽 변수에 대입</td></tr><tr><td>-&#x3D;</td><td>왼쪽 변수의 값을 오른쪽 변수로 뺄셈 후 왼쪽 변수에 대입</td></tr><tr><td>*&#x3D;</td><td>왼쪽 변수의 값을 오른쪽 변수로 곱셈 후 왼쪽 변수에 대입</td></tr><tr><td>&#x2F;&#x3D;</td><td>왼쪽 변수의 값을 오른쪽 변수로 나눈 후 왼쪽 변수에 대입</td></tr><tr><td>%&#x3D;</td><td>왼쪽 변수의 값을 오른쪽 변수로 나눈 후 나머지 값을 왼쪽 변수에 대입</td></tr></tbody></table></li><li><p>예시</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;a = 10 =&gt; a = &quot;</span> + a);</span><br><span class="line"></span><br><span class="line">a += <span class="number">5</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;10 += 5 =&gt; a = &quot;</span> + a);</span><br><span class="line"><span class="comment">// a = 10 + 5</span></span><br><span class="line">a -= <span class="number">5</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;15 -= 5 =&gt; a = &quot;</span> + a);</span><br><span class="line"><span class="comment">// a = 15 - 5</span></span><br><span class="line">a *= <span class="number">5</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;10 *= 5 =&gt; a = &quot;</span> + a);</span><br><span class="line"><span class="comment">// a = 10 * 5</span></span><br><span class="line">a /= <span class="number">5</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;50 /= 5 =&gt; a = &quot;</span> + a);</span><br><span class="line"><span class="comment">// a = 50 / 5</span></span><br><span class="line">a %= <span class="number">5</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;10 %= 5 =&gt; a = &quot;</span> + a);</span><br><span class="line"><span class="comment">// a = 10 % 5 - 나머지 0</span></span><br></pre></td></tr></table></figure></li><li><p>결과</p><p>  <img src="/Images/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A1/Untitled%203.png"></p></li></ul>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/JAVA/">JAVA</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EA%B0%9C%EB%85%90/">개념</category>
      
      <category domain="https://Depra3.github.io/tags/%EC%97%B0%EC%82%B0%EC%9E%90/">연산자</category>
      
      <category domain="https://Depra3.github.io/tags/%EC%82%B0%EC%88%A0-%EC%97%B0%EC%82%B0%EC%9E%90/">산술 연산자</category>
      
      <category domain="https://Depra3.github.io/tags/%EB%B6%80%ED%98%B8-%EC%97%B0%EC%82%B0%EC%9E%90/">부호 연산자</category>
      
      <category domain="https://Depra3.github.io/tags/%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%97%B0%EC%82%B0%EC%9E%90/">문자열 연산자</category>
      
      <category domain="https://Depra3.github.io/tags/%EB%8C%80%EC%9E%85-%EC%97%B0%EC%82%B0%EC%9E%90/">대입 연산자</category>
      
      
      <comments>https://depra3.github.io/2023/07/05/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A1%20%EC%82%B0%EC%88%A0,%20%EB%B6%80%ED%98%B8,%20%EB%AC%B8%EC%9E%90%EC%97%B4,%20%EB%8C%80%EC%9E%85/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA-연산자-① 정의, 종류, 우선 순위</title>
      <link>https://depra3.github.io/2023/07/04/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A0%20%EC%A0%95%EC%9D%98,%20%EC%A2%85%EB%A5%98,%20%EC%9A%B0%EC%84%A0%20%EC%88%9C%EC%9C%84/</link>
      <guid>https://depra3.github.io/2023/07/04/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A0%20%EC%A0%95%EC%9D%98,%20%EC%A2%85%EB%A5%98,%20%EC%9A%B0%EC%84%A0%20%EC%88%9C%EC%9C%84/</guid>
      <pubDate>Tue, 04 Jul 2023 12:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;연산자-정의&quot;&gt;&lt;a href=&quot;#연산자-정의&quot; class=&quot;headerlink&quot; title=&quot;연산자 정의&quot;&gt;&lt;/a&gt;연산자 정의&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;연산&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;프로그램에서 데이터를 처리하여 결과를</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="연산자-정의"><a href="#연산자-정의" class="headerlink" title="연산자 정의"></a>연산자 정의</h2><ul><li><strong>연산</strong><ul><li>프로그램에서 데이터를 처리하여 결과를 산출하는 것</li></ul></li><li><strong>연산자</strong><ul><li>산술, 부호, 문자열, 대입, 증감, 비교, 논리, 조건 등의 연산을 하는 데에 사용되는 표시나 기호</li></ul></li><li><strong>피연산자</strong><ul><li>연산 시에 연산이 되어지는 대상</li><li>예시<ul><li>A + B 의 식에서 A, B 변수가 피연산자</li></ul></li></ul></li><li><strong>연산식 ( &#x3D; 표현식 )</strong><ul><li>연산자와 피연산자를 통해 각 변수 또는 상수가 연산을 하는 식</li></ul></li></ul><hr><h2 id="연산자의-종류"><a href="#연산자의-종류" class="headerlink" title="연산자의 종류"></a>연산자의 종류</h2><p><img src="/Images/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A0/Untitled.png"></p><ul><li>피연산자 개수로 연산자 분류<ul><li><strong>단항</strong> 연산자 : ++, —, !, ^ 등</li><li><strong>이항</strong> 연산자 : +, -, *, &#x2F;</li><li><strong>삼항</strong> 연산자 : (조건식) ? A : B</li><li>보통 대부분의 연산자는 이항 연산자다.</li></ul></li></ul><hr><h2 id="연산자-우선-순위"><a href="#연산자-우선-순위" class="headerlink" title="연산자 우선 순위"></a>연산자 우선 순위</h2><ul><li><p>연산식에 사용된 연산자가 둘 이상일 경우, 연산자의 우선 순위에 의해 연산 순서가 결정된다.</p></li><li><p>단항 연산자(ex. ++,— 등)가 이항 연산자(ex. +,- 등)보다 우선 순위가 높다.</p><ul><li><strong>단항</strong> &gt; <strong>이항</strong> &gt; <strong>삼항</strong></li><li><strong>산술</strong> &gt; <strong>비교</strong> &gt; <strong>논리</strong> &gt; <strong>대입</strong></li></ul></li><li><p>우선 순위가 확실하지 않다면, 괄호 ()를 이용하여 묶어주어야 한다.</p><p>  괄호 안의 계산식이 우선 순위가 제일 높다.</p></li><li><p><strong>연산자의 결합 규칙</strong>은 <strong>왼쪽에서 오른쪽</strong> 순서이지만, **대입 연산자 (제일 늦음)**는 <strong>오른쪽에서 왼쪽</strong>으로 진행된다.</p><ul><li>예시</li></ul>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 연산자 결합 규칙</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span> * <span class="number">10</span> * <span class="number">10</span>;</span><br><span class="line"><span class="comment">// 순서 : 왼쪽에서 오른쪽</span></span><br><span class="line">a = (<span class="number">10</span> * <span class="number">10</span>) * <span class="number">10</span> = <span class="number">100</span> * <span class="number">10</span> = <span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 대입 연산자 결합 규칙</span></span><br><span class="line">a = b = c = <span class="number">10</span>;</span><br><span class="line"><span class="comment">// 순서 : 오른쪽에서 왼쪽</span></span><br><span class="line">c = <span class="number">10</span></span><br><span class="line">b = <span class="type">c</span></span><br><span class="line"><span class="variable">a</span> <span class="operator">=</span> b</span><br></pre></td></tr></table></figure></li></ul>]]></content:encoded>
      
      
      <category domain="https://Depra3.github.io/categories/JAVA/">JAVA</category>
      
      
      <category domain="https://Depra3.github.io/tags/%EA%B0%9C%EB%85%90/">개념</category>
      
      <category domain="https://Depra3.github.io/tags/%EC%97%B0%EC%82%B0%EC%9E%90/">연산자</category>
      
      
      <comments>https://depra3.github.io/2023/07/04/2023/07/JAVA-%EC%97%B0%EC%82%B0%EC%9E%90-%E2%91%A0%20%EC%A0%95%EC%9D%98,%20%EC%A2%85%EB%A5%98,%20%EC%9A%B0%EC%84%A0%20%EC%88%9C%EC%9C%84/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
